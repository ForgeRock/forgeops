
# TODO: When:
# https://github.com/tektoncd/pipeline/pull/3176
# Is merged we can implement the continueAfterSkip feature.
# See below
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: fidc-pipeline
spec:
  resources:
    - name: forgeops
      type: git
  params:
  - name: namespace
    type: string
    description: Target namespace of this pipeline
    default: fidc
    # When https://github.com/tektoncd/pipeline/pull/3176 is integrated
    # rename this to something more sensible.
  - name: nuke
    type: string
    description: Use the value nuke if we should delete the existing deployment, any other value keeps the directory
    default: "nuke"
  - name: notify
    description: Set to true (default) to send notification to slack with the generated passwords
    default: "false"

  tasks:
    - name: nuke-deployment
      taskRef:
        name: nuke-deployment
      params:
      - name: namespace
        value: "$(params.namespace)"
  # For the "prod" pipe the idea is to skip the steps that nuke the environment
  # however this does not work currently due to: https://github.com/tektoncd/pipeline/pull/3176
      when:
      - input: "$(params.nuke)"
        operator: in
        values: [ "nuke" ]

    - name: deploy-base-ds
      taskRef:
        name: deploy-base-ds
      runAfter:
      - nuke-deployment
      resources:
        inputs:
        - name: forgeops
          resource: forgeops
      params:
      - name: namespace
        value: "$(params.namespace)"
      when:
      - input: "$(params.nuke)"
        operator: in
        values: [ "nuke" ]

    - name: skaffold-deploy-fidc-apps
      taskRef:
        name: skaffold-deploy-fidc-apps
      runAfter:
      - deploy-base-ds
      resources:
        inputs:
        - name: forgeops
          resource: forgeops
      params:
      - name: namespace
        value: "$(params.namespace)"

    - name: amster-fidc-load
      taskRef:
        name: amster-fidc-load
      runAfter:
      - skaffold-deploy-fidc-apps
      resources:
        inputs:
        - name: forgeops
          resource: forgeops
      params:
      - name: namespace
        value: "$(params.namespace)"

   # The smoke test creates 5 users as part of the test
   # Don't do this util tests are ready
   #  - name: run-tests
   #    taskRef:
   #      name: smoke-test
   #    runAfter:
   #    - amster-fidc-load
   #    resources:
   #      inputs:
   #      - name: forgeops
   #        resource: forgeops
   #    params:
   #    - name: namespace
   #      value:  "$(params.namespace)"

   #  - name: notify-step
   #    runAfter:
   #    - run-tests
   #    taskRef:
   #      name: notify
   #    resources:
   #      inputs:
   #      - name: forgeops
   #        resource: forgeops
   #    params:
   #    - name: namespace
   #      value: "$(params.namespace)"
   #    when:
   #    - input: "$(params.notify)"
   #      operator: in
   #      values: ["true"]
