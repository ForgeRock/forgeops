openidm.repo.host=ds-idrepo-0.ds-idrepo
openidm.repo.port=1636
openidm.repo.user=uid=admin
# todo: When the idm profile switches to this user, use this instead:
#openidm.repo.user=uid=am-identity-bind-account,ou=admins,ou=identities
openidm.repo.password=password
openidm.repo.databaseName=openidm
openidm.repo.schema=openidm

# This is here to suppress IDM crypting the password and writing out authentication.json
openidm.anonymous.password=anonymous

# Client password for IDM/AM integration
openidm.idpconfig.clientsecret=password

# These are for the (ldap) provisioner i.e. used for synchronization
userstore.host=ds-idrepo-0.ds-idrepo
userstore.password=password
userstore.port=1636
userstore.basecontext=ou=identities

# Ports openidm should listen on locally
openidm.port.http=8080
openidm.port.https=8443
openidm.port.mutualauth=8444
# openidm.host=&{fqdn}   It's not required since it's referenced in docker/idm/conf/jetty.xml

# Define external load balancer ports.
openidm.lb.port.http=80
openidm.ln.port.https=443
openidm.auth.clientauthonlyports=8444

openidm.https.keystore.cert.alias=openidm-localhost

openidm.keystore.type=JCEKS
openidm.truststore.type=JKS
openidm.keystore.provider=SunJCE
openidm.truststore.provider=SUN
openidm.keystore.location=/var/run/secrets/idm/keystore.jceks
openidm.truststore.location=/opt/openidm/idmtruststore

# Keystore password, adjust to match your keystore and protect this file
openidm.keystore.password=changeit
openidm.truststore.password=changeit

# Prometheus endpoint authentication
openidm.prometheus.username=prometheus
openidm.prometheus.password=prometheus
openidm.prometheus.role=openidm-prometheus

# Optionally use the crypto bundle to obfuscate the password and set one of these:
#openidm.keystore.password=OBF:
#openidm.keystore.password=CRYPT:

# PKCS#11 configuration file
#openidm.security.pkcs11.config=

# Do not quote this string
openidm.servlet.alias=/openidm
openidm.servlet.upload.alias=/upload
openidm.servlet.export.alias=/export

# key in keystore to handle config encryption
openidm.config.crypto.alias=openidm-sym-default
openidm.script.javascript.debug=transport=socket,suspend=y,address=9888,trace=true
#openidm.script.javascript.sources=/Eclipse/workspace/External JavaScript Source/

# key in keystore to handle selfservice sharedkey
openidm.config.crypto.selfservice.sharedkey.alias=openidm-selfservice-key

# key in keystore to handle jwtsession hmac signing key
openidm.config.crypto.jwtsession.hmackey.alias=openidm-jwtsessionhmac-key

# key/cert in keystore/truststore to handle embedded opendj ssl
openidm.config.crypto.opendj.localhost.cert=server-cert

# optionally map a hostname to a specific client key alias
openidm.ssl.host.aliases=localhost=

# policy enforcement enable/disable
openidm.policy.enforcement.enabled=true

# node id if clustered; each node in a cluster must have a unique node id
#openidm.node.id=node1

# enables the execution of persistent schedulers
openidm.scheduler.execute.persistent.schedules=true

# enables the statistics MBean for BoneCP. Enabling this will have a performance impact on BoneCP.
openidm.bonecp.statistics.enabled=false

# determines whether javascript exceptions will include debug information - e.g. file name, line number
javascript.exception.debug.info=false

# determines the TLS version used by the http client in the external rest service to connect to TLS-protected resources
# valid values: SSLv3, TLSv1, TLSv1.1, TLSv1.2
# defaults to TLSv1.2 if not specified
#openidm.external.rest.tls.version=TLSv1.1

# set external REST service's HTTP client hostname verification policy for HTTPS endpoints
# valid values: ALLOW_ALL, STRICT
# defaults to STRICT if not specified
openidm.external.rest.hostnameVerifier=ALLOW_ALL

# Indicates whether the IDM deployment is automated by a cluster management tool such as Kubernetes, which
# deploys containers in Pods whose identities are transient. Pod shutdown will mean that the corresponding cluster
# node identity will never re-appear in the cluster, and thus IDM's record of this cluster node should be deleted
# upon cluster node shutdown or failure. Defaults to false if not specified.
openidm.cluster.remove.offline.node.state=true

# enables API Descriptor generation, which if set to 'false', renders the API Explorer non-functional
openidm.apidescriptor.enabled=false

# enables workflow
openidm.workflow.enabled=true

# To stop writes to configuration files, set this property to false; suitable for read-only installations.
felix.fileinstall.enableConfigSave=true

# Filtered headers in audit.json that may be customized
com.iplanet.am.cookie.name=iPlanetDirectoryPro
com.sun.identity.auth.cookieName=AMAuthCookie

# TODO: Move this to commons secrets
# The client secret for the idm/am integration
rs.client.secret=idm-resource-server
