#!/usr/bin/env bash
# Run the am-config upgrade process on PingAM FBC configuration files.
#
# The default rules upgrade PingAM configuration to the same version as the upgrader image itself. For
# example, if the upgrader docker image is version 7.3.1, PingAM FBC files will be upgraded to 7.3.1.
#
# Usage: bin/am-upgrader [am-fbc-files] [rules-directory]
#  [am-fbc-files] is the directory that contains the exported PingAM FBC Files. This defaults to docker/am.
#   This script assumes FBC files have been previously exported.
#
#  If [rules-directory] is not provided, the version upgrade rules bundled in the image will be used. Otherwise
#  the rules found in this directory will be run.
#
#
# You can change the version of the upgrader used by supplying the REPO and TAG environment variables.
# For example:
# TAG=7.5.0 bin/am-config-upgrader

# Mac does not come with realpath by default.
# https://stackoverflow.com/questions/3572030/bash-script-absolute-path-with-os-x/18443300#18443300

set -e

# Grab our starting dir
start_dir=$(pwd)
# Figure out the dir we live in
SCRIPT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
# Bring in our standard functions
source $SCRIPT_DIR/../../lib/shell/stdlib.sh
# Bring in common.sh
source $SCRIPT_DIR/common.sh
# Go back to where we started
cd $start_dir

usage() {
  local usage_msg=$(cat<<EOM
usage: $PROG [OPTIONS] AM_CONF_PATH [RULES_PATH]

Build container images for one or more Ping Identity Platform components.

Notes:
  * building amster images is not supported, use bin/amster
  * Only ${COMPONENTS_FBC[*]} respect --config-profile
  * Set PUSH_TO in forgeops.conf to configure for the team
  * Default rules: /path/to/forgeops/etc/am-upgrader-rules/

OPTIONS:
  -h|--help                        : display usage and exit
  -d|--debug                       : turn on debugging
  --dryrun                         : do a dry run
  -v|--verbose                     : be verbose
  -b|--build-path <path>           : path to build dir (default: docker)
  -l|--release-name <release-name> : release to use for base images

Examples:
  Normal operation:
  $PROG /path/to/docker/am/config-profiles/prod

  Specify alternate rules file:
  $PROG /path/to/docker/am/config-profiles/prod /path/to/am-upgrader-rules/

  Do a dryrun:
  $PROG --dryrun /path/to/docker/am/config-profiles/prod

EOM
)

  usageStd $1 "$usage_msg" "$2"
}

realpath() {
    cd "$(dirname "$1")"
    local LINK=$(readlink "$(basename "$1")")
    while [ "$LINK" ]; do
        cd "$(dirname "$LINK")"
        local LINK=$(readlink "$(basename "$1")")
    done
    local REALPATH="$PWD/$(basename "$1")"
    cd "$start_dir"
    echo "$REALPATH"
}

processArgs $*
checkContainerEngine

if [ "$DEBUG" = true ] ; then
  set -x
fi

RULES_VOLUME=""
if [ -n "$COMPONENTS" ] ; then
  CONFIG_DIR=${COMPONENTS[0]}
  # If the user supplies a rules volume use that instead of the builtin rules
  if [[ -n "${COMPONENTS[1]}" ]] ; then
    RDIR=$(realpath ${COMPONENTS[1]})
    RULES_VOLUME="--volume $RDIR:/rules"
  fi
else
# Where the PingAM exported files are by default
  CONFIG_DIR=$BUILD_PATH/am
fi

# Never run against a minikube daemon
## TODO update for podman with minikube
if [[ "$CONTAINER_ENGINE" == 'docker' ]] ; then
    $CONTAINER_ENGINE ps --format '{{.Names}}' | grep -q minikube \
        && unset -v DOCKER_HOST DOCKER_CERT_PATH DOCKER_MACHINE_NAME DOCKER_TLS_VERIFY
fi

# Check to see if your container engine is running
if ! $CONTAINER_ENGINE info --format ' ' ; then
    echo "A container engine must be running. Please start your container environment and run again."
    exit 1
fi

# The default repo for the upgrader docker image
DEFAULT_REPO=${REPO:-us-docker.pkg.dev/forgeops-public/images/am-config-upgrader}

# The am upgrader image tag to run. To override:
# TAG=foo  bin/am-config-upgrader
TAG=${TAG:-latest}

if [ -n "$RELEASE_NAME" ] ; then
  # If we were given a release name, source the file if it exists to
  # override $REPO and $TAG from that file
  RELEASE_PATH=$BUILD_PATH/am/releases/$RELEASE_NAME
  if [ -f $RELEASE_PATH ] ; then
    source $RELEASE_PATH
  fi
fi

# Reset the REPO value because the source command will set it to the am repo
REPO=$DEFAULT_REPO

# Only retrieve the release identifier from the tag
echo "Stripping the date string suffix from the PingAM release tag so it retrieves the correct version of the upgrader to match PingAM"
TAG=${TAG%%-*}

# For docker volume mounts.
CONFIG=$(realpath $CONFIG_DIR)

GID=$(id -g)

# Run the upgrader locally - optionally over mounting the /rules directory
#set -x
runOrPrint $CONTAINER_ENGINE run --rm --user $UID:$GID --volume "$CONFIG":/am-config $RULES_VOLUME "$REPO:$TAG"
