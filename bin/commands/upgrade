#!/usr/bin/env bash

set -e

# Grab our starting dir
start_dir=$(pwd)
# Figure out the dir we live in
SCRIPT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
# Bring in our standard functions
source $SCRIPT_DIR/../../lib/shell/stdlib.sh
# Bring in common.sh
source $SCRIPT_DIR/common.sh
# Go back to where we started
cd "${start_dir}"

usage() {
  local usage_msg=$(cat<<EOM
usage: $PROG --env-name ENV_NAME [OPTIONS]

Upgrade a Kustomize overlay with new features.

OPTIONS:
  -h|--help                   : display usage and exit
  -d|--debug                  : turn on debugging
  -r|--dryrun                 : do a dry run
  -v|--verbose                : be verbose
  -e|--env-name ENV_NAME      : Name of environment to upgrade (Required)
  -k|--kustomize-path PATH    : kustomize dir to use (default: kustomize)
                                (full path or relative to forgeops root)
  -s|--source SOURCE_ENV      : provide an alternate source overlay (default: default)

Notes:
  * If you use an alternate default overlay, upgrade that one first.

Examples:
  Normal operation:
  $PROG -e my_env

  Do a dryrun:
  $PROG --dryrun -e my_env

EOM
)

  usageStd $1 "$usage_msg" "$2"
}

# 2025.2.0
update_secrets() {
  echo "Checking secrets child overlay"
  local secrets_path=$OVERLAY_PATH/secrets
  if [ -d "$secrets_path" ] ; then
    if [ -d "$secrets_path/secret-agent" ] && [ -d "$secrets_path/secret-generator" ] ; then
      echo "$secrets_path already updated"
    else
      echo "Updating ${secrets_path}"
      echo -n "Backing up current secrets child overlay..."
      runOrPrint "mv ${secrets_path} ${secrets_path}.bak"
      echo "done"
      echo -n "Copying ${SOURCE_PATH}/secrets to ${secrets_path}..."
      runOrPrint "cp -rp ${SOURCE_PATH}/secrets ${OVERLAY_PATH}"
      echo "done"
      echo "The ${secrets_path} child overlay has been updated."
      echo "Please note that secret-agent is enabled by default."
    fi
  fi
}

# Setup valid components now so they get presented in the usage
COMPONENTS_VALID=()
SOURCE=${SOURCE:-default}

# Code in common.sh
processArgs $*

if [ ! -d "$OVERLAY_PATH" ] ; then
  usage 1 "Overlay directory is missing. Create an environment with 'forgeops env'"
fi

SOURCE_PATH=$OVERLAY_ROOT/$SOURCE

update_secrets
