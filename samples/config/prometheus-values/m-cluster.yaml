# set https to false for GKE. True by default for minikube
exporter-kubelets:
  https: false
  
# Kube-scheduler
deployKubeScheduler: False

# Controller Manager
deployKubeControllerManager: False

domain: .perf.forgerock-qa.com

grafana:
  storageSpec:
    class: fast
    accessMode: "ReadWriteOnce"
    resources:
     requests:
       storage: 20Gi
    #selector: {}
  ingress:
    enabled: true

    annotations: 
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"

    labels:
      group: monitoring-ingress
      product: grafana
      
    hosts:
      - grafana.monitoring.perf.forgerock-qa.com
      
    tls:
      - secretName: wildcard.monitoring.perf.forgerock-qa.com
        hosts:
          - grafana.monitoring.perf.forgerock-qa.com
          
alertmanager:
  ## Alertmanager configuration directives
  ## Ref: https://prometheus.io/docs/alerting/configuration/
  ##
  config:
    global:
      resolve_timeout: 5m
      slack_api_url: 'https://hooks.slack.com/services/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'
    route:
      group_by: ['alertname', 'job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      # All alerts to go to Slack by default
      receiver: 'slack-medium-cluster'
      routes: 
      - match:
          alertname: DeadMansSwitch
        receiver: 'null'
      
    receivers:
    - name: 'null'
    - name: 'slack-medium-cluster'
      slack_configs:
      - channel: '#alerts-medium-cluster'
        text: "Job: {{ .GroupLabels.job }}\nSummary: {{ .CommonAnnotations.summary }}\nDescription: {{ .CommonAnnotations.description }}\n"


  ## Alertmanager container image
  ##
  image:
    repository: quay.io/prometheus/alertmanager
    tag: v0.15.1

  ## Alertmanager StorageSpec for persistent data
  ## Ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/user-guides/storage.md
  ##
  storageSpec:
    volumeClaimTemplate:
      spec:
        storageClassName: fast
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50Gi
      #selector: {}
      
  ingress:
    enabled: true

    annotations: 
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"

    labels:
      group: monitoring-ingress
      product: alertmanager
      
    hosts:
      - alertmanager.monitoring.perf.forgerock-qa.com
      
    tls:
      - secretName: wildcard.monitoring.perf.forgerock-qa.com
        hosts:
          - alertmanager.monitoring.perf.forgerock-qa.com

prometheus:
  storageSpec:
    volumeClaimTemplate:
      metadata:
        name: prometheus-metrics
        annotations:
          "helm.sh/resource-policy": keep
      spec:
        storageClassName: standard
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Gi
            
  ingress:
    enabled: true

    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"

    labels:
      group: monitoring-ingress
      product: prometheus

    hosts:
      - prometheus.monitoring.perf.forgerock-qa.com

    tls:
      - secretName: wildcard.monitoring.perf.forgerock-qa.com
        hosts:
          - prometheus.monitoring.perf.forgerock-qa.com
