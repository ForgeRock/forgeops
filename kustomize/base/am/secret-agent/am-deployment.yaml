---
# Source: identity-platform/templates/am-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: am
  labels:
    helm.sh/chart: identity-platform-1.0.0
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/part-of: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
    app: am
    app.kubernetes.io/component: am
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: identity-platform
      app.kubernetes.io/part-of: identity-platform
      app.kubernetes.io/instance: identity-platform
      app: am
      app.kubernetes.io/component: am
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: identity-platform
        app.kubernetes.io/part-of: identity-platform
        app.kubernetes.io/instance: identity-platform
        app: am
        app.kubernetes.io/component: am
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 0
        runAsUser: 11111
      volumes:
        - name: fbc
          emptyDir: {}
        - name: am-secrets
          projected:
            sources:
              - secret:
                  name: am-passwords
              - secret:
                  name: am-keystore
        - name: amster-key
          secret:
            secretName: amster
            items:
              - key: id_rsa.pub
                path: authorized_keys
        - name: truststore
          projected:
            sources:
              - secret:
                  name: ds-ssl-keypair
        - name: new-truststore
          emptyDir: {}
        - name: am-logback
          configMap:
            name: am-logback
        - name: entrypoint-scripts
          configMap:
            name: am-entrypoint
            defaultMode: 0755
        - name: am-import-pem-certs
          configMap:
            name: am-import-pem-certs
            defaultMode: 0755
      initContainers:
        - name: fbc-init
          image: am
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /fbc
              name: fbc
          command:
            - /bin/bash
            - -c
            - |
              if [ -d /fbc/config ];
              then
                echo "Existing openam configuration found. Skipping copy"
              else
                echo "Copying docker image configuration files to the shared volume"
                cd /home/forgerock/openam
                cp -r .homeVersion * /fbc
                # Keep a copy of the default boot.json to use in the main container in case of a container restart
                cp /fbc/config/boot.json /fbc/default-boot.json
              fi
        - name: truststore-init
          image: am
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: new-truststore
              mountPath: /truststore
            - name: truststore
              mountPath: /var/run/secrets/truststore
            - name: am-import-pem-certs
              mountPath: /home/forgerock/import-pem-certs.sh
              subPath: import-pem-certs.sh
          command:
            - /home/forgerock/import-pem-certs.sh
          env:
            - name: TRUSTSTORE_PATH
              value: /truststore/amtruststore
            - name: TRUSTSTORE_PASSWORD
              value: changeit
            - name: AM_PEM_TRUSTSTORE
              value: /usr/lib/ssl/cert.pem
            - name: AM_PEM_TRUSTSTORE_DS
              value: /var/run/secrets/truststore/ca.crt
      containers:
        - name: openam
          securityContext: {}
          image: am
          imagePullPolicy: IfNotPresent
          command:
            - bash
            - /home/forgerock/entrypoint-scripts/entrypoint.sh
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AM_STORES_SSL_ENABLED
              value: "true"
            - name: TRUSTSTORE_PATH
              value: /home/forgerock/amtruststore
            - name: TRUSTSTORE_PASSWORD
              value: changeit
            - name: AM_STORES_USER_TYPE
              value: LDAPv3ForForgeRockIAM
          envFrom:
            - secretRef:
                name: am-env-secrets
            - configMapRef:
                name: platform-config
            - secretRef:
                name: ds-env-secrets
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /am/json/health/live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /am/json/health/ready
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: /am/json/health/live
              port: http
            failureThreshold: 40
            periodSeconds: 10
          resources:
            limits:
              memory: 1800Mi
            requests:
              cpu: 250m
              memory: 1800Mi
          volumeMounts:
            - name: new-truststore
              mountPath: /home/forgerock/amtruststore
              readOnly: true
              subPath: amtruststore
            - name: am-secrets
              mountPath: /var/run/secrets/am
            - name: amster-key
              mountPath: /var/run/secrets/amster
            - name: fbc
              mountPath: /home/forgerock/openam
            - name: am-logback
              mountPath: /home/forgerock/logging
            - name: entrypoint-scripts
              mountPath: /home/forgerock/entrypoint-scripts
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Exists
