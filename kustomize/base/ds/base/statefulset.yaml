apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ds
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: ds-idrepo
      app.kubernetes.io/name: ds
  serviceName: ds
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ds-idrepo
        app.kubernetes.io/name: ds
        app.kubernetes.io/part-of: forgerock
    spec:
      affinity:
        # Schedules DS Pods to a node with the label "ds" if it exists
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: ds
                operator: Exists
      # Spread the pods across the node topology evenly
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/instance: ds-idrepo
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      - labelSelector:
          matchLabels:
            app.kubernetes.io/instance: ds-idrepo
        maxSkew: 1
        topologyKey: topology.kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway

      # Create a toleration that allows this pod to be scheduled on a tainted node
      # This is used to drive directory instances to dedicated nodes for performance.
      # If a node is not tainted, this has no impact.
      tolerations:
      - effect: NoSchedule
        key: key
        operator: Equal
        value: directory
      - key: kubernetes.io/arch
        operator: Exists
        effect: NoSchedule
      initContainers:
      - name: init
        command: ["/opt/opendj/default-scripts/init-and-restore.sh"]
        image: ds
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: DS_SET_UID_ADMIN_AND_MONITOR_PASSWORDS
          value: "true"
        - name: DS_UID_MONITOR_PASSWORD_FILE
          value: /var/run/secrets/monitor/monitor.pw
        - name: DS_UID_ADMIN_PASSWORD_FILE
          value: /var/run/secrets/admin/dirmanager.pw
        - name: DSBACKUP_HOSTS
          valueFrom:
            configMapKeyRef:
              name: platform-config
              key: DSBACKUP_HOSTS
        - name: DSBACKUP_DIRECTORY
          valueFrom:
            configMapKeyRef:
              name: platform-config
              key: DSBACKUP_DIRECTORY
        - name: AUTORESTORE_FROM_DSBACKUP
          valueFrom:
            configMapKeyRef:
              name: platform-config
              key: AUTORESTORE_FROM_DSBACKUP
        - name: DISASTER_RECOVERY_ID
          valueFrom:
            configMapKeyRef:
              name: platform-config
              key: DISASTER_RECOVERY_ID
        envFrom:
        - secretRef:
            name: cloud-storage-credentials
            optional: true
        volumeMounts:
        - mountPath: /opt/opendj/data
          name: data
        - mountPath: /var/run/secrets/admin
          name: admin-password
        - mountPath: /var/run/secrets/monitor
          name: monitor-password
        - mountPath: /var/run/secrets/ds-ssl-keypair
          name: ds-ssl-keypair
        - mountPath: /var/run/secrets/ds-master-keypair
          name: ds-master-keypair
        - mountPath: /var/run/secrets/truststore
          name: truststore
        - mountPath: /var/run/secrets/keys
          name: keys
        - name: cloud-credentials-cache
          mountPath: /var/run/secrets/cloud-credentials-cache/
        resources:
          requests:
            memory: 1366Mi
            cpu: 500m
          limits:
            memory: 1366Mi
      containers:
      - name: ds
        args:
        - start-ds
        image: ds
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: DS_SET_UID_ADMIN_AND_MONITOR_PASSWORDS
          value: "true"
        - name: DS_UID_MONITOR_PASSWORD_FILE
          value: /var/run/secrets/monitor/monitor.pw
        - name: DS_UID_ADMIN_PASSWORD_FILE
          value: /var/run/secrets/admin/dirmanager.pw
        - name: DS_TEST
          value: MY_TEST_VARIABLE
        envFrom:
        - secretRef:
            name: cloud-storage-credentials
            optional: true 
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          requests:
            memory: 1366Mi
            cpu: 500m
          limits:
            memory: 1366Mi
        startupProbe:
          failureThreshold: 720
          httpGet:
            path: /healthy
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1        
        volumeMounts:
        - mountPath: /opt/opendj/data
          name: data
        - mountPath: /var/run/secrets/admin
          name: admin-password
        - mountPath: /var/run/secrets/monitor
          name: monitor-password
        - mountPath: /var/run/secrets/ds-ssl-keypair
          name: ds-ssl-keypair
        - mountPath: /var/run/secrets/ds-master-keypair
          name: ds-master-keypair
        - mountPath: /var/run/secrets/truststore
          name: truststore
        - mountPath: /var/run/secrets/keys
          name: keys
        - name: cloud-credentials-cache
          mountPath: /var/run/secrets/cloud-credentials-cache
      securityContext:
        fsGroup: 0
        runAsUser: 11111
        runAsGroup: 0
      terminationGracePeriodSeconds: 30
      volumes:
      - name: ds-master-keypair
        secret:
          defaultMode: 420
          secretName: ds-master-keypair
      - name: ds-ssl-keypair
        secret:
          defaultMode: 420
          secretName: ds-ssl-keypair
      - name: truststore
        secret:
          defaultMode: 420
          secretName: ds-ssl-keypair
      - name: admin-password
        secret:
          defaultMode: 420
          secretName: ds-passwords
      - name: monitor-password
        secret:
          defaultMode: 420
          secretName: ds-passwords
      - name: keys
        emptyDir: {}
      - name: cloud-credentials-cache
        emptyDir: {}
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app.kubernetes.io/instance: ds-idrepo
        app.kubernetes.io/name: ds
        app.kubernetes.io/part-of: forgerock
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: fast
