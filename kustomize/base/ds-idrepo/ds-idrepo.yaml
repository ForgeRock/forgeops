# Sample DirectoryService deployment
apiVersion: directory.forgerock.io/v1alpha1
kind: DirectoryService
metadata:
  name: ds-idrepo
spec:
  # The number of DS servers in the topology
  replicas: 1
  podTemplate:
    image: ds
    imagePullPolicy: IfNotPresent

    # The resources assigned to each DS pod
    resources:
      requests:
        memory: 1366Mi
        cpu: 500m
      limits:
        memory: 1366Mi

    # Kubernetes secrets holding the certificates and keys for directory server operation.
    # Secrets can be generated by cert-manager or other tools that generate
    # PEM based secrets of type kubernetes.io/tls.
    secrets:
      # the tls.key in this secret is the private key used for encrypting DS data.
      # BACK THIS UP!! If you lose this secret your data will be lost forever.
      masterSecretName: ds-master-keypair
      # tls.key and tls.crt used for SSL connections between ds instances - for replication, etc.
      sslSecretName: ds-ssl-keypair
      # The truststore is taken from the ca.crt in the tls secret. In most cases
      # you can use the same CA trust pem in the ssl secret above. If you are using
      # cert-manager, it includes the CA trust pem along with the private/public key pair.
      truststoreSecretName: ds-ssl-keypair

    #
    # Optional configmap holding scripts to override the default scripts.
    # Scripts that can be overridden are: restore, backup, and post-init
    # These should NOT have the .sh extension, and should be executable scripts.
    # You can add additional scripts in the configmap for adhoc commands that can be run
    # using kubectl exec.
    # Scripts are mounted on /opt/opendj/scripts
    # scriptConfigMapName: ds-script-config

    # The volume spec for the DS data. This is the same as the Kubernetes PVC volume spec.
    volumeClaimSpec:
      storageClassName: fast
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
      # Optional: If the volume dataSource is provided *AND* the PVC does not yet exist, the directory PVCs will be
      # initialized from the contents of the snapshot. They will NOT be initialized from the setup script.
      #
      # If the PVC already exists this setting has no effect.
      #
      # The name "$(latest)" is reserved. It signifies to the operator
      # to find the name of the latest auto snapshot that was taken . If you
      # have a custom volume snapshot (perhaps you manually created a snapshot), use that name instead.
      # If no automatic $(latest) snapshot can be found, the operator will create a new empty volume.
      # dataSource:
      #   name: "$(latest)"
      #   kind: VolumeSnapshot
      #   apiGroup: snapshot.storage.k8s.io

    #
    # Class to use for any snapshots.
    volumeSnapshotClassName: ds-snapshot-class
    # Optional: The Kubernetes service account to use for the DS pod/containers.
    # serviceAccountName: default

    # Use this to set any additional env vars on the DS pods.
    env:
    - name: "DS_TEST"
      value: "MY_TEST_VARIABLE"
    # Examples of setting environment variables:
    #
    # 1. Set DS_BOOTSTRAP_REPLICATION_SERVERS to override the default bootstrap
    # for a multi-cluster deployment. This example overrides the default bootstrap for a
    # GCP MultiCluster deployment for a "ds-cts" instance by specifying one bootstrap server
    # in this cluster (eu) and a second bootstrap server in the us cluster. The DNS names
    # in the value must be fully resolvable on all clusters. The namespaces must be identical
    # in all clusters.
    #
    # - name: DS_BOOTSTRAP_REPLICATION_SERVERS
    #   value: "ds-cts-0.ds-cts.mynamespace.svc.eu:8989,ds-cts-0.ds-cts.mynamespace.svc.us:8989"
    #
    # See the README in forgeops/ds/ds-new. Understand what you are doing before setting this variable!
    #
    # 2. Set DS_GROUP_ID to indicate that we are in the eu region. The group ID is appended to the
    # hostname to ensure that the server has a unique identity within the Directory Service topology.
    # - name: DS_GROUP_ID
    #   value: "eu"

    ### End Pod Template ###

  # Optional - Configures the operator to automatically take snapshots
  # You must be using a CSI volume driver. CSI drivers are now the default on GCP clusters.
  # For more information on CSI drivers, see: https://kubernetes.io/docs/concepts/storage/volumes/#csi
  snapshots:
    enabled: false
    # Take a snapshot every N minutes. The number here is low for testing.
    # On a production cluster, you should set this to something higher (20-30 minutes).
    # Note that GCP snapshots are quota limited to 6 per hour per disk.
    periodMinutes: 10
    # Keep this many snapshots. Older snapshots will be deleted
    snapshotsRetained: 3
    # DS instance to take snapshot of. Default is 0(ds-idrepo-0).
    # For deployment with multiple ds-idrepo servers, change this to a non primary ds-idrepo server(e.g. 1).
    # directoryInstance: 0

  ### Passwords ###
  # Passwords: maps DS accounts to new or existing secrets.
  # The operator supports "bring your own secrets". For example, a secret may have been generated by another operator such as secret agent.
  # A secret that does not set create: true is assumed to be supplied externally. External secrets will not be deleted by the operator
  passwords:
    # uid=admin and uid=monitor are required account secrets.
    uid=admin:
      secretName: ds-passwords
      key: dirmanager.pw
    uid=monitor:
      secretName: ds-passwords
      key: monitor.pw
      # example of letting the operator generate the secret:
      #create: true

    # Set the service account passwords
    # We also set the CTS account - in case the user wants to use a single ds instance
    uid=openam_cts,ou=admins,ou=famrecords,ou=openam-session,ou=tokens:
      secretName: ds-env-secrets
      key: AM_STORES_CTS_PASSWORD
    uid=am-identity-bind-account,ou=admins,ou=identities:
      secretName: ds-env-secrets
      key: AM_STORES_USER_PASSWORD
    uid=am-config,ou=admins,ou=am-config:
      secretName: ds-env-secrets
      key: AM_STORES_APPLICATION_PASSWORD
    # An example where the operator should generate a password
    # uid=test,ou=admins,ou=test:
    #   secretName: my-secret
    #   key: test.pw
    #   create: true
