---
# Source: identity-platform/templates/platform-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: am-env-secrets
  labels:
    helm.sh/chart: identity-platform-1.0.0
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/part-of: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: AM_AUTHENTICATION_SHARED_SECRET,AM_ENCRYPTION_KEY,AM_OIDC_CLIENT_SUBJECT_IDENTIFIER_HASH_SALT,AM_PASSWORDS_AMADMIN_CLEAR,AM_SELFSERVICE_LEGACY_CONFIRMATION_EMAIL_LINK_SIGNING_KEY,AM_SESSION_STATELESS_ENCRYPTION_KEY,AM_SESSION_STATELESS_SIGNING_KEY
    secret-generator.v1.mittwald.de/length: "32"
---
# Source: identity-platform/templates/platform-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: amster
  labels:
    helm.sh/chart: identity-platform-1.0.0
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/part-of: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret-generator.v1.mittwald.de/type: ssh-keypair
---
# Source: identity-platform/templates/platform-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: amster-env-secrets
  labels:
    helm.sh/chart: identity-platform-1.0.0
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/part-of: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: IDM_PROVISIONING_CLIENT_SECRET,IDM_RS_CLIENT_SECRET
    secret-generator.v1.mittwald.de/length: "24"
---
# Source: identity-platform/templates/platform-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ds-env-secrets
  labels:
    helm.sh/chart: identity-platform-1.0.0
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/part-of: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: AM_STORES_APPLICATION_PASSWORD,AM_STORES_CTS_PASSWORD,AM_STORES_USER_PASSWORD
    secret-generator.v1.mittwald.de/length: "32"
---
# Source: identity-platform/templates/platform-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ds-passwords
  labels:
    helm.sh/chart: identity-platform-1.0.0
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/part-of: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: dirmanager.pw,monitor.pw
    secret-generator.v1.mittwald.de/length: "32"
---
# Source: identity-platform/templates/platform-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: idm-env-secrets
  labels:
    helm.sh/chart: identity-platform-1.0.0
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/part-of: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: OPENIDM_ADMIN_PASSWORD
    secret-generator.v1.mittwald.de/length: "24"
---
# Source: identity-platform/templates/platform-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: keystore-create
  labels:
    helm.sh/chart: identity-platform-1.0.0
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/part-of: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: KEYSTORE_PASSWORD
    secret-generator.v1.mittwald.de/length: "24"
---
# Source: identity-platform/templates/ds-set-passwords-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ds-set-passwords-scripts
  labels:
    helm.sh/chart: identity-platform-1.0.0
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/part-of: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
    app: idm
    app.kubernetes.io/component: idm
data:
  ds-passwords.sh: |
    #!/bin/bash

    PS4='+ $(date "+%H:%M:%S")\011 '
    set -eo pipefail

    chgPass () {
        local HOST=$1
        local ADMIN_PASS=$2
        local USER_DN=$3
        local USER_UID=$4
        local USER_PASS=$5
        local FULL_USER_DN="${USER_UID},${USER_DN}"
        echo "Checking ${HOST} for ${USER_UID},${USER_DN}"
        CXN="-h ${HOST} -p 1636 --useSsl --trustAll"
        ldapsearch ${CXN} -D "uid=admin" -w "${ADMIN_PASS}" -b ${USER_DN} "${USER_UID}"  > /dev/null
        SEARCH_RESPONSE=$?
        echo ""
        echo "- Changing password of ${FULL_USER_DN}"
        case "${SEARCH_RESPONSE}" in
            "0")
                echo "ldapmodify ${CXN} -D \"uid=admin\" -w **** -a \"dn:${FULL_USER_DN}\" "
                ldapmodify ${CXN} -D "uid=admin" -w "${ADMIN_PASS}" <<EOM
    dn: $FULL_USER_DN
    changetype: modify
    replace: userPassword
    $USER_PASS
    EOM
            ;;
            "32")
                echo "ERROR: ${FULL_USER_DN} not found, skipping..."
                exit 1
            ;;
            *)
                echo "ERROR: Error when searching for user, response is : \"$SEARCH_RESPONSE\""
                exit 1
            ;;
        esac
    }

    ADMIN_PASS=$(cat /var/run/secrets/opendj-passwords/dirmanager.pw)

    AM_STORES_USER_PASSWORD_REAL="userPassword: $AM_STORES_USER_PASSWORD"
    AM_STORES_APPLICATION_PASSWORD_REAL="userPassword: $AM_STORES_APPLICATION_PASSWORD"
    AM_STORES_CTS_PASSWORD_REAL="userPassword: $AM_STORES_CTS_PASSWORD"

    if [ -n "$OLD_AM_STORES_USER_PASSWORD" ] ; then
      AM_STORES_USER_PASSWORD_REAL=$(cat<<EOM
    userPassword: $AM_STORES_USER_PASSWORD
    userPassword: $OLD_AM_STORES_USER_PASSWORD
    EOM
    )
    fi

    if [ -n "$OLD_AM_STORES_APPLICATION_PASSWORD" ] ; then
      AM_STORES_APPLICATION_PASSWORD_REAL=$(cat<<EOM
    userPassword: $AM_STORES_APPLICATION_PASSWORD
    userPassword: $OLD_AM_STORES_APPLICATION_PASSWORD
    EOM
    )
    fi

    if [ -n "$OLD_AM_STORES_CTS_PASSWORD" ] ; then
      AM_STORES_CTS_PASSWORD_REAL=$(cat<<EOM
    userPassword: $AM_STORES_CTS_PASSWORD
    userPassword: $OLD_AM_STORES_CTS_PASSWORD
    EOM
    )
    fi

    chgPass ds-idrepo-0.ds-idrepo ${ADMIN_PASS} 'ou=admins,ou=identities' 'uid=am-identity-bind-account' "${AM_STORES_USER_PASSWORD_REAL}"
    chgPass ds-idrepo-0.ds-idrepo ${ADMIN_PASS} 'ou=admins,ou=am-config' 'uid=am-config' "${AM_STORES_APPLICATION_PASSWORD_REAL}"
    chgPass ds-cts-0.ds-cts ${ADMIN_PASS} 'ou=admins,ou=famrecords,ou=openam-session,ou=tokens' 'uid=openam_cts' "${AM_STORES_CTS_PASSWORD_REAL}"
    echo 'Password script finished'

    echo "done"
  start.sh: "#!/usr/bin/env bash\n\n# Checking PingDS is up\n\nwait_repo() {\n    local HOST=\"$1-0.$1\"\n    local USER_DN=$2\n    local USER_UID=$3\n    local CXN=\"-h ${HOST} -p 1636 --useSsl --trustAll\"\n    echo \"Waiting for $HOST to be available.\"\n    SEARCH_CMD=\"ldapsearch ${CXN} -D 'uid=admin' -w '${ADMIN_PASS}' -b ${USER_DN} '${USER_UID}'\"\n    eval $SEARCH_CMD\n    SEARCH_REPONSE=$?\n    while [[ \"$SEARCH_RESPONSE\" != \"0\" ]] ; do\n        sleep 5;\n        eval $SEARCH_CMD\n        SEARCH_RESPONSE=$?\n    done\n    echo \"$REPO is responding\"\n}\n\nADMIN_PASS=$(cat /var/run/secrets/opendj-passwords/dirmanager.pw)\n\nwait_repo ds-idrepo ou=admins,ou=identities \"uid=am-identity-bind-account\" \nwait_repo ds-cts ou=admins,ou=famrecords,ou=openam-session,ou=tokens \"uid=openam_cts\" \n\n# Set the PingDS passwords for each store\nif [ -f \"/opt/opendj/ds-passwords.sh\" ]; then\n    echo \"Setting directory service account passwords\"\n    /opt/opendj/ds-passwords.sh\n    if [ $? -ne 0 ]; then\n        echo \"ERROR: Pre install script failed\"\n        exit 1\n    fi\nfi\n"
---
# Source: identity-platform/templates/ds-set-passwords-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: ds-set-passwords
  labels:
    helm.sh/chart: identity-platform-1.0.0
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/part-of: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
    app: ldif-importer
    app.kubernetes.io/component: ldif-importer
spec:
  backoffLimit: 6
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: identity-platform
        app.kubernetes.io/part-of: identity-platform
        app.kubernetes.io/instance: identity-platform
        app: ldif-importer
        app.kubernetes.io/component: ldif-importer
    spec:
      restartPolicy: OnFailure
      serviceAccountName: default
      securityContext:
        fsGroup: 0
        runAsUser: 0
      volumes:
        - name: passwords
          secret:
            secretName: ds-passwords
        - name: ds-set-passwords
          configMap:
            name: ds-set-passwords-scripts
            defaultMode: 0777
      containers:
        - name: ds-set-passwords
          securityContext: {}
          image: us-docker.pkg.dev/forgeops-public/images/ds:latest
          imagePullPolicy: Always
          command:
            - sh
            - -c
            - /opt/opendj/start.sh
          envFrom:
            - secretRef:
                name: ds-env-secrets
            - secretRef:
                name: old-ds-env-secrets
                optional: true
          readinessProbe:
            exec:
              command:
                - cat
                - /etc/hosts
            initialDelaySeconds: 1
          resources: {}
          volumeMounts:
            - name: passwords
              mountPath: /var/run/secrets/opendj-passwords
            - name: ds-set-passwords
              mountPath: /opt/opendj/start.sh
              subPath: start.sh
            - name: ds-set-passwords
              mountPath: /opt/opendj/ds-passwords.sh
              subPath: ds-passwords.sh
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Exists
---
# Source: identity-platform/templates/ds-certificates.yaml
# Certs for SSL. This is also the truststore secret as well.
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ds-ssl-cert
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: hook-failed
spec:
  # Secret names are always required.
  secretName: ds-ssl-keypair
  # Secret template is optional. If set, these annotations
  # and labels will be copied to the secret named example-com-tls.

  # You can add your own custom values here.
  secretTemplate:
    annotations:
      my-secret-annotation: cert-manager-generated
    labels:
      app: ds
  duration: 21600h # 900 days.
  subject:
    organizations:
      - forgerock.org
  # The use of the common name field has been deprecated since 2000 and is
  # discouraged from being used.
  commonName: ds
  isCA: false
  privateKey:
    algorithm: ECDSA
    # encoding: PKCS1
    # size: 2048
  usages:
    - server auth
    - client auth
  # At least one of a DNS Name, URI, or IP address is required.
  dnsNames:
    - '*.ds'
    - '*.ds-idrepo'
    - '*.ds-cts'
  # Issuer references are always required.
  issuerRef:
    name: selfsigned-issuer
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: Issuer
    # This is optional since cert-manager will default to this value however
    # if you are using an external issuer, change this to that issuer group.
    group: cert-manager.io
---
# Source: identity-platform/templates/ds-certificates.yaml
# The master keypair for encrypting PingDS data.
# YOU MUST BACK UP THE PRIVATE KEY
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ds-master-cert
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: hook-failed
spec:
  # Secret names are always required.
  secretName: ds-master-keypair
  # Secret template is optional. If set, these annotations
  # and labels will be copied to the secret named example-com-tls.

  # Note: Labels and annotations from the template are only synced to the Secret at the time when the certificate
  # is created or renewed. Currently labels and annotations can only be added, but not removed. Removing any
  # labels or annotations from the template or removing the template itself will have no effect.
  # See https://github.com/jetstack/cert-manager/issues/4292.
  secretTemplate:
    labels:
      app: ds
  duration: 21600h # 900 days
  subject:
    organizations:
      - ForgeRock.com
  # The use of the common name field has been deprecated since 2000 and is
  # discouraged from being used.
  commonName: Master Key
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  # At least one of a DNS Name, URI, or IP address is required.
  dnsNames:
    - '*.ds'
  # Issuer references are always required.
  issuerRef:
    name: selfsigned-issuer
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: Issuer
    # This is optional since cert-manager will default to this value however
    # if you are using an external issuer, change this to that issuer group.
    group: cert-manager.io
# Source: identity-platform/templates/ds-certificates.yaml
# PingDS certificates are now generated by cert-manager
---
# Below configures a self signed CA
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: hook-failed
spec:
  selfSigned: {}
