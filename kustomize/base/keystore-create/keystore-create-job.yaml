---
# Source: identity-platform/templates/keystore-create-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: keystore-create
  labels:
    helm.sh/chart: identity-platform-1.0.0
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/part-of: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
    app: platform-keystore
    app.kubernetes.io/component: platform-keystore
spec:
  backoffLimit: 6
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: identity-platform
        app.kubernetes.io/part-of: identity-platform
        app.kubernetes.io/instance: identity-platform
        app: platform-keystore
        app.kubernetes.io/component: platform-keystore
    spec:
      restartPolicy: OnFailure
      serviceAccountName: keystore-create
      securityContext: {}
      volumes:
        - name: keystore-secrets
          projected:
            sources:
              - secret:
                  name: keystore-create
                  items:
                    - key: KEYSTORE_PASSWORD
                      path: .storepass
                    - key: KEYSTORE_PASSWORD
                      path: .keypass
              - secret:
                  name: ds-passwords
                  items:
                    - key: dirmanager.pw
                      path: dirmanager.pw
        - name: platform-config
          configMap:
            name: platform-config
        - name: keystore-create
          configMap:
            name: keystore-create
            defaultMode: 0755
        - name: keystore-config
          configMap:
            name: keystore
        - name: keystore
          emptyDir: {}
      initContainers:
        - name: keystore-create
          securityContext: {}
          image: us-docker.pkg.dev/forgeops-public/images/am:latest
          imagePullPolicy: IfNotPresent
          command:
            - /home/forgerock/keystore-create.sh
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: platform-config
          resources: {}
          volumeMounts:
            - name: keystore-config
              mountPath: /home/forgerock/keystore.json
              subPath: keystore.json
            - name: keystore-secrets
              mountPath: /var/run/secrets/keystore
            - name: keystore-create
              mountPath: /home/forgerock/keystore-create.sh
              subPath: keystore-create.sh
            - name: keystore
              mountPath: /keystore
      containers:
        - name: keystore-secret-create
          securityContext: {}
          image: alpine/kubectl:1.34.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              kubectl get secret $SECRET_NAME \
                --namespace=$NAMESPACE 2>&1 >/dev/null || \
                  kubectl create secret generic $SECRET_NAME \
                    --from-file=/keystore/keystore.jceks --namespace=$NAMESPACE
          env:
            - name: SECRET_NAME
              value: keystore
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: platform-config
          readinessProbe:
            exec:
              command:
                - cat
                - /etc/hosts
            initialDelaySeconds: 1
          resources: {}
          volumeMounts:
            - name: keystore
              mountPath: /keystore
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Exists