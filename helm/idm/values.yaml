# Default values for openidm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# Top level domain. Used to create the ingress
domain: example.com
subdomain: iam

# TODO: Review
# If immutable is true, IDM  will not persist any configuration changes made in the admin UI (or via admin REST calls)
# back out to the file system. If you are developing and want to IDM to write configuration changes back out
# so they can saved and committed to git, set this to false.
immutableConfig: false

secret:
  name: openidm-secrets-env

# Used to form the FQDN  - see _helpers.tpl
component: openidm

image: forgerock-docker-public.bintray.io/forgerock/idm:7.0.0
pullPolicy: IfNotPresent

# override Java JVM options.
# For JDK 11 add -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/jdk.internal.loader=ALL-UNNAMED
javaOpts: "-Xmx1024m -server -XX:+UseG1GC"

# Specific values
openidm:
  repo:
    # DS external repo
    # host: userstore-0.userstore
    # port: 1389
    # user: "cn=Directory Manager"
    # password: password
    # postgres values
     host: postgresql
     port: 5432
     user: openidm
     password: openidm
     schema: openidm
     databaseName: openidm
  # Optional client secret for AM/IDM integration:
  idpconfig:
    clientsecret: password
  prometheus:
    username: prometheus
    password: prometheus

# Optional - if there is a DS userstore configured for synchornization or explict mapping when DS is used as repo
userstore:
  host: userstore-0.userstore
  password: password
  port: 1389
  basecontext: "ou=identities"

service:
  name: openidm
  # default to ClusterIP
  #type: NodePort
  externalPort: 80
  internalPort: 8080

resources:
  limits:
    cpu: 1000m
    memory: 1200Mi
  requests:
    cpu: 300m
    memory: 1024Mi

# Default log level. See templates/configmap/logging.properties. For example, you can use FINE here to
# see fine grained logging output using kubectl logs.
logLevel: INFO

ingress:
  class: nginx
  enabled: true
  annotations:
    # Nginx specific annotations
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"

istio:
  enabled: false

rootContext: /idm