# For schema see https://coreos.com/operators/prometheus/docs/latest/api.html#endpoint
{{- if .Values.idm.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-apps: kube-prometheus
    # This label targets the prometheus operator instance
    # You could in theory have many operators running in a cluster (one for dev, qa, etc.)
    # This targets the instance that the helm chart coreos/kube-prometheus creates. 
    # Note that this ServiceMonitor needs to be in the same namespace as the operator
    # The monitored targets can be in different namespaces.
    prometheus: {{ .Release.Namespace }}-kube-prometheus
    app: {{ .Values.idm.component }}
  name: {{ .Values.idm.component }}
spec:
  # Tells prometheus which endpoint / port to scrape
  endpoints:
  # If you use targetPort it looks like it wants an integer here.
  # targetPort is the pod port *NOT* the service port
  - port: openidm
    path: {{ .Values.idm.path }}
    basicAuth:
      username:
        name: prometheus-idm
        key: user
      password:
        name: prometheus-idm
        key: password
  # This targets the service using a label.
  selector:
    matchLabels:
      component: {{ .Values.idm.labelSelectorComponent }}
  namespaceSelector:
    {{ if eq .Values.namespaceSelectorStrategy "any" }}
    any: true
    {{ else }}
    matchNames:
      {{- range .Values.namespaceSelector }}
      - {{ . }}
      {{- end }}
    {{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: prometheus-idm
data:
  user:  {{ .Values.idm.secretUser | b64enc }}
  password: {{ .Values.idm.secretPassword | b64enc }}
type: Opaque
{{- end -}}