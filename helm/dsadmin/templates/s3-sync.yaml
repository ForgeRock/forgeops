{{- if .Values.s3.enabled }}
# This is an optional cron job to sync the contents of the backup shared PVC to s3 for offline storage.
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: s3-sync
  labels:
    app: s3-sync
    vendor: forgerock
spec:
  # Hours are UTC. 5:15 AM UTC is approx. 1 AM EST
  schedule: "15 5 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            # This runs the s3 sync command to sync the contents of the bucket to the /backup folder
          - name: s3
            image: amazonlinux:2.0.20180827
            imagePullPolicy: IfNotPresent
            # sync in both directions. First we sync our pvc backup to s3. Then we sync back again - which will pick up
            # Any new files added to s3. If you don't want this bidirectional behaviour, take out the second s3 command.
            # Note the use of the --delete (delete) option on the second sync.
            # This triggers deletion of files on /backup that do not
            # exist on s3.  You may wish to disable this option for safety. If you do, to delete files you must ensure they are
            # deleted from both the backup filesystem AND the s3 bucket. Another option is to send s3 backups to yet another bucket
            # likely using offline or nearline storage.
            command: [ "/bin/sh", "-c",
              "yum install -y awscli; aws s3 sync /backup {{ .Values.s3.bucket }}; aws s3 sync {{ .Values.s3.bucket }} /backup --delete; chmod -R g+rw /backup"]
            volumeMounts:
            - name: backup
              mountPath: /backup
          volumes:
          - name: backup
            persistentVolumeClaim:
              claimName: {{ .Values.backup.pvcName }}
{{ end }}
