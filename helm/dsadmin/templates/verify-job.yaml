{{ if .Values.backup.verify }}
# This is a WIP.
# TODO: This needs to be refactored to support verification across many ds instance backups
# It previously had a 1-1 relationship between the instance and the backup, now it is 1-N 
#
# This is an optional cron job that restores from a backup and verifies the integrity of the data.
# To create an ad hoc job you can use:
#  kubectl create job verify --from=cronjob/ds-verify
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Values.instance }}-verify
  labels:
    instance: {{ .Values.instance }}
    app: {{ template "fullname" . }}
    vendor: forgerock
    component: opendj
spec:
  # Hours are UTC. This is approx. 1 AM EST
  schedule: "15 5 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          # This will make sure the mounted PVCs are writable by the forgerock user with gid 111111.
          securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
          restartPolicy: Never      
          containers:
          - name: opendj
            image:  {{ .Values.image.repository }}:{{ .Values.image.tag }}
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            envFrom:
            - configMapRef:
                name: {{ .Values.instance }}
            env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # Todo: We need to pass in list of backend paths to verify
            args: ["verify"]
            volumeMounts:
            # - name: dj-secrets
            #   mountPath: /var/run/secrets/opendj
            - name: backup
              mountPath: /opt/opendj/bak
            - name: db
              mountPath: /opt/opendj/data
          volumes:
          # - name: dj-secrets
          #   secret:
          #     secretName: {{ .Values.instance }}
          - name: backup
            persistentVolumeClaim: 
              claimName: {{ .Values.backup.pvcName }}
          - name: db
            persistentVolumeClaim:
              claimName: dsadmin-verify
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dsadmin-verify
  annotations:
    pv.beta.kubernetes.io/gid: "11111"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ default "5Gi"  .Values.storageSize }}
  {{- if .Values.storageClass }}
  storageClassName:  {{ .Values.storageClass }}
  {{- end }}
{{end}}