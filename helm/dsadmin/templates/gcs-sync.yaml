{{- if .Values.gcs.enabled }}
# This is an optional cron job to sync the contents of the backup shared PVC to gcs for offline storage.
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: gcs-sync
  labels:
    app: gcs-sync
    vendor: forgerock
spec:
  # Hours are UTC. 5:15 AM UTC is approx. 1 AM EST
  schedule: "15 5 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            # This runs the gsutil command to rsync the contents of the bucket to the /backup folder
          - name: gcs
            image: gcr.io/cloud-builders/gcloud:latest
            imagePullPolicy: IfNotPresent
            # rsync in both directions. First we sync our pvc backup to gcs. Then we sync back again - which will pick up 
            # Any new files added to gcs. If you don't want this bidirectional behaviour, take out the second gcs command.
            # Note the use of the -d (delete) option on the second rsync. 
            # This triggers deletion of files on /backup that do not 
            # exist on gcs.  You may wish to disable this option for safety. If you do, to delete files you must ensure they are
            # deleted from both the backup filesystem AND the gcs bucket. Another option is to send gcs backups to yet another bucket
            # likely using offline or nearline storage.
            command: [ "/bin/sh", "-c", 
              "gsutil -m rsync -r /backup {{ .Values.gcs.bucket }} && gsutil -m rsync -r {{ .Values.gcs.bucket }} /backup; chmod -R g+rw /backup"]
            volumeMounts:
            - name: backup
              mountPath: /backup
          volumes:
          - name: backup
            persistentVolumeClaim:
              claimName: {{ .Values.backup.pvcName }}
{{ end }}
