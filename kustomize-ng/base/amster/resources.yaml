---
# Source: identity-platform/templates/amster-files-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: amster-config
  labels:
    helm.sh/chart: identity-platform-7.5
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: "7.5"
    app.kubernetes.io/managed-by: Helm
binaryData:
  fe63c80e189bcab18f001a857c9da6b5535684e60753f4e7c56392a631e15b98: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIkFwcGxpY2F0aW9ucyIsCiAgICAiZW50aXR5SWQiIDogImlQbGFuZXRBTVdlYkFnZW50U2VydmljZSIsCiAgICAicGF0aFBhcmFtcyIgOiB7IH0KICB9LAogICJkYXRhIiA6IHsKICAgICJfaWQiIDogImlQbGFuZXRBTVdlYkFnZW50U2VydmljZSIsCiAgICAibmFtZSIgOiAiaVBsYW5ldEFNV2ViQWdlbnRTZXJ2aWNlIiwKICAgICJkaXNwbGF5TmFtZSIgOiAiRGVmYXVsdCBQb2xpY3kgU2V0IiwKICAgICJkZXNjcmlwdGlvbiIgOiAiVGhlIGJ1aWx0LWluIEFwcGxpY2F0aW9uIHVzZWQgYnkgT3BlbkFNIFBvbGljeSBBZ2VudHMuIiwKICAgICJhdHRyaWJ1dGVOYW1lcyIgOiBbIF0sCiAgICAiY29uZGl0aW9ucyIgOiBbICJTY3JpcHQiLCAiQU1JZGVudGl0eU1lbWJlcnNoaXAiLCAiSVB2NiIsICJTaW1wbGVUaW1lIiwgIklQdjQiLCAiTEVBdXRoTGV2ZWwiLCAiTERBUEZpbHRlciIsICJBdXRoU2NoZW1lIiwgIlNlc3Npb24iLCAiQU5EIiwgIkF1dGhlbnRpY2F0ZVRvUmVhbG0iLCAiUmVzb3VyY2VFbnZJUCIsICJTZXNzaW9uUHJvcGVydHkiLCAiT0F1dGgyU2NvcGUiLCAiT1IiLCAiVHJhbnNhY3Rpb24iLCAiTk9UIiwgIkF1dGhMZXZlbCIsICJBdXRoZW50aWNhdGVUb1NlcnZpY2UiIF0sCiAgICAiY3JlYXRlZEJ5IiA6ICJpZD1kc2FtZXVzZXIsb3U9dXNlcixvdT1hbS1jb25maWciLAogICAgInJlc291cmNlVHlwZVV1aWRzIiA6IFsgIjc2NjU2YTM4LTVmOGUtNDAxYi04M2FhLTRjY2I3NGNlODhkMiIgXSwKICAgICJyZXNvdXJjZUNvbXBhcmF0b3IiIDogbnVsbCwKICAgICJjcmVhdGlvbkRhdGUiIDogMTU3ODU4MDA2NTAzMywKICAgICJsYXN0TW9kaWZpZWREYXRlIiA6IDE1Nzg1ODAwNjUwMzMsCiAgICAibGFzdE1vZGlmaWVkQnkiIDogImlkPWRzYW1ldXNlcixvdT11c2VyLG91PWFtLWNvbmZpZyIsCiAgICAic2F2ZUluZGV4IiA6IG51bGwsCiAgICAic2VhcmNoSW5kZXgiIDogbnVsbCwKICAgICJhcHBsaWNhdGlvblR5cGUiIDogImlQbGFuZXRBTVdlYkFnZW50U2VydmljZSIsCiAgICAiZW50aXRsZW1lbnRDb21iaW5lciIgOiAiRGVueU92ZXJyaWRlIiwKICAgICJzdWJqZWN0cyIgOiBbICJBdXRoZW50aWNhdGVkVXNlcnMiLCAiTk9UIiwgIklkZW50aXR5IiwgIk9SIiwgIkFORCIsICJOT05FIiwgIkp3dENsYWltIiBdLAogICAgImVkaXRhYmxlIiA6IHRydWUKICB9Cn0=
  8ba770d2c9209e987e12d2a02ac51014a3da4cd05c9bd08d09c58b174c133ded: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIkFwcGxpY2F0aW9ucyIsCiAgICAiZW50aXR5SWQiIDogIm9hdXRoMlNjb3BlcyIsCiAgICAicGF0aFBhcmFtcyIgOiB7IH0KICB9LAogICJkYXRhIiA6IHsKICAgICJfaWQiIDogIm9hdXRoMlNjb3BlcyIsCiAgICAibmFtZSIgOiAib2F1dGgyU2NvcGVzIiwKICAgICJkaXNwbGF5TmFtZSIgOiAiRGVmYXVsdCBPQXV0aDIgU2NvcGVzIFBvbGljeSBTZXQiLAogICAgImRlc2NyaXB0aW9uIiA6ICJUaGUgYnVpbHQtaW4gQXBwbGljYXRpb24gdXNlZCBieSB0aGUgT0F1dGgyIHNjb3BlIGF1dGhvcml6YXRpb24gcHJvY2Vzcy4iLAogICAgImF0dHJpYnV0ZU5hbWVzIiA6IFsgXSwKICAgICJjb25kaXRpb25zIiA6IFsgIlNjcmlwdCIsICJBTUlkZW50aXR5TWVtYmVyc2hpcCIsICJJUHY2IiwgIlNpbXBsZVRpbWUiLCAiSVB2NCIsICJMRUF1dGhMZXZlbCIsICJMREFQRmlsdGVyIiwgIkF1dGhTY2hlbWUiLCAiU2Vzc2lvbiIsICJBTkQiLCAiQXV0aGVudGljYXRlVG9SZWFsbSIsICJSZXNvdXJjZUVudklQIiwgIlNlc3Npb25Qcm9wZXJ0eSIsICJPQXV0aDJTY29wZSIsICJPUiIsICJUcmFuc2FjdGlvbiIsICJOT1QiLCAiQXV0aExldmVsIiwgIkF1dGhlbnRpY2F0ZVRvU2VydmljZSIgXSwKICAgICJjcmVhdGVkQnkiIDogImlkPWRzYW1ldXNlcixvdT11c2VyLG91PWFtLWNvbmZpZyIsCiAgICAicmVzb3VyY2VUeXBlVXVpZHMiIDogWyAiZDYwYjdhNzEtMWRjNi00NGE1LThlNDgtZTRiOWQ5MmRlZThiIiBdLAogICAgInJlc291cmNlQ29tcGFyYXRvciIgOiBudWxsLAogICAgImNyZWF0aW9uRGF0ZSIgOiAxNTc4NTgwMDY0OTkyLAogICAgImxhc3RNb2RpZmllZERhdGUiIDogMTU3ODU4MDA2NDk5MiwKICAgICJsYXN0TW9kaWZpZWRCeSIgOiAiaWQ9ZHNhbWV1c2VyLG91PXVzZXIsb3U9YW0tY29uZmlnIiwKICAgICJzYXZlSW5kZXgiIDogbnVsbCwKICAgICJzZWFyY2hJbmRleCIgOiBudWxsLAogICAgImFwcGxpY2F0aW9uVHlwZSIgOiAiaVBsYW5ldEFNV2ViQWdlbnRTZXJ2aWNlIiwKICAgICJlbnRpdGxlbWVudENvbWJpbmVyIiA6ICJEZW55T3ZlcnJpZGUiLAogICAgInN1YmplY3RzIiA6IFsgIkF1dGhlbnRpY2F0ZWRVc2VycyIsICJOT1QiLCAiSWRlbnRpdHkiLCAiT1IiLCAiQU5EIiwgIk5PTkUiLCAiSnd0Q2xhaW0iIF0sCiAgICAiZWRpdGFibGUiIDogdHJ1ZQogIH0KfQ==
  e5e03f343398d8332c1f53b51ee06981a41de72cfb4820960793c0daef9f3c73: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIkFwcGxpY2F0aW9ucyIsCiAgICAiZW50aXR5SWQiIDogInN1bkFNRGVsZWdhdGlvblNlcnZpY2UiLAogICAgInBhdGhQYXJhbXMiIDogeyB9CiAgfSwKICAiZGF0YSIgOiB7CiAgICAiX2lkIiA6ICJzdW5BTURlbGVnYXRpb25TZXJ2aWNlIiwKICAgICJuYW1lIiA6ICJzdW5BTURlbGVnYXRpb25TZXJ2aWNlIiwKICAgICJkaXNwbGF5TmFtZSIgOiAiRGVsZWdhdGlvbiBQb2xpY3kgU2V0IiwKICAgICJkZXNjcmlwdGlvbiIgOiBudWxsLAogICAgImF0dHJpYnV0ZU5hbWVzIiA6IFsgXSwKICAgICJjb25kaXRpb25zIiA6IFsgXSwKICAgICJjcmVhdGVkQnkiIDogImlkPWRzYW1ldXNlcixvdT11c2VyLG91PWFtLWNvbmZpZyIsCiAgICAicmVzb3VyY2VUeXBlVXVpZHMiIDogWyAiMjBhMTM1ODItMWYzMi00ZjgzLTkwNWYtZjcxZmY0ZTJlMDBkIiBdLAogICAgInJlc291cmNlQ29tcGFyYXRvciIgOiBudWxsLAogICAgImNyZWF0aW9uRGF0ZSIgOiAxNTc4NTgwMDY1MDE0LAogICAgImxhc3RNb2RpZmllZERhdGUiIDogMTU3ODU4MDA2NTAxNCwKICAgICJsYXN0TW9kaWZpZWRCeSIgOiAiaWQ9ZHNhbWV1c2VyLG91PXVzZXIsb3U9YW0tY29uZmlnIiwKICAgICJzYXZlSW5kZXgiIDogbnVsbCwKICAgICJzZWFyY2hJbmRleCIgOiBudWxsLAogICAgImFwcGxpY2F0aW9uVHlwZSIgOiAic3VuQU1EZWxlZ2F0aW9uU2VydmljZSIsCiAgICAiZW50aXRsZW1lbnRDb21iaW5lciIgOiAiRGVueU92ZXJyaWRlIiwKICAgICJzdWJqZWN0cyIgOiBbICJPUiIsICJBTkQiLCAiQXV0aGVudGljYXRlZFVzZXJzIiwgIk5PVCIsICJJZGVudGl0eSIgXSwKICAgICJlZGl0YWJsZSIgOiB0cnVlCiAgfQp9
  b83e99de89a7582bfaadacd9daf94c92e9c2a4ed4d5b61bc6269d65bd4b6ba06: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIklkZW50aXR5R2F0ZXdheUFnZW50cyIsCiAgICAiZW50aXR5SWQiIDogImlnLWFnZW50IiwKICAgICJwYXRoUGFyYW1zIiA6IHsgfQogIH0sCiAgImRhdGEiIDogewogICAgIl9pZCIgOiAiaWctYWdlbnQiLAogICAgImlnVG9rZW5JbnRyb3NwZWN0aW9uIiA6ICJOb25lIiwKICAgICJpZ0Nkc3NvUmVkaXJlY3RVcmxzIiA6IFsgImh0dHA6Ly9hbTo4MC9hbS9jZGNzZXJ2bGV0IiBdLAogICAgInVzZXJwYXNzd29yZCIgOiAiJntpZy5hZ2VudC5wYXNzd29yZHxwYXNzd29yZH0iLAogICAgInN0YXR1cyIgOiAiQWN0aXZlIiwKICAgICJhZ2VudGdyb3VwIiA6IG51bGwsCiAgICAiX3R5cGUiIDogewogICAgICAiX2lkIiA6ICJJZGVudGl0eUdhdGV3YXlBZ2VudCIsCiAgICAgICJuYW1lIiA6ICJJZGVudGl0eSBHYXRld2F5IEFnZW50cyIsCiAgICAgICJjb2xsZWN0aW9uIiA6IHRydWUKICAgIH0KICB9Cn0=
  26ca813f81ad68ee51af855f07fac803004b622f9b36dc86d22f91316b37cdb3: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIk9BdXRoMkNsaWVudHMiLAogICAgImVudGl0eUlkIiA6ICJjbGllbnQtYXBwbGljYXRpb24iLAogICAgInBhdGhQYXJhbXMiIDogeyB9CiAgfSwKICAiZGF0YSIgOiB7CiAgICAiX2lkIiA6ICJjbGllbnQtYXBwbGljYXRpb24iLAogICAgInNpZ25FbmNPQXV0aDJDbGllbnRDb25maWciIDogewogICAgICAiaWRUb2tlbkVuY3J5cHRpb25NZXRob2QiIDogIkExMjhDQkMtSFMyNTYiLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uU2lnbmVkUmVzcG9uc2VBbGciIDogIlJTMjU2IiwKICAgICAgImp3a1NldCIgOiBudWxsLAogICAgICAiaWRUb2tlbkVuY3J5cHRpb25BbGdvcml0aG0iIDogIlJTQS1PQUVQLTI1NiIsCiAgICAgICJ1c2VyaW5mb1Jlc3BvbnNlRm9ybWF0IiA6ICJKU09OIiwKICAgICAgInRva2VuSW50cm9zcGVjdGlvblJlc3BvbnNlRm9ybWF0IiA6ICJKU09OIiwKICAgICAgIm1UTFNUcnVzdGVkQ2VydCIgOiBudWxsLAogICAgICAiandrc0NhY2hlVGltZW91dCIgOiAzNjAwMDAwLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uRW5jcnlwdGVkUmVzcG9uc2VBbGciIDogIlJTQS1PQUVQLTI1NiIsCiAgICAgICJ1c2VyaW5mb1NpZ25lZFJlc3BvbnNlQWxnIiA6IG51bGwsCiAgICAgICJ0b2tlbkVuZHBvaW50QXV0aFNpZ25pbmdBbGdvcml0aG0iIDogIlJTMjU2IiwKICAgICAgInJlcXVlc3RQYXJhbWV0ZXJFbmNyeXB0ZWRBbGciIDogbnVsbCwKICAgICAgIm1UTFNTdWJqZWN0RE4iIDogbnVsbCwKICAgICAgImlkVG9rZW5FbmNyeXB0aW9uRW5hYmxlZCIgOiBmYWxzZSwKICAgICAgInVzZXJpbmZvRW5jcnlwdGVkUmVzcG9uc2VFbmNyeXB0aW9uQWxnb3JpdGhtIiA6ICJBMTI4Q0JDLUhTMjU2IiwKICAgICAgInB1YmxpY0tleUxvY2F0aW9uIiA6ICJqd2tzX3VyaSIsCiAgICAgICJtVExTQ2VydGlmaWNhdGVCb3VuZEFjY2Vzc1Rva2VucyIgOiBmYWxzZSwKICAgICAgInRva2VuSW50cm9zcGVjdGlvbkVuY3J5cHRlZFJlc3BvbnNlRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJyZXF1ZXN0UGFyYW1ldGVyRW5jcnlwdGVkRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJqd2tTdG9yZUNhY2hlTWlzc0NhY2hlVGltZSIgOiA2MDAwMCwKICAgICAgImlkVG9rZW5TaWduZWRSZXNwb25zZUFsZyIgOiAiUlMyNTYiLAogICAgICAiaWRUb2tlblB1YmxpY0VuY3J5cHRpb25LZXkiIDogbnVsbCwKICAgICAgImp3a3NVcmkiIDogbnVsbCwKICAgICAgInVzZXJpbmZvRW5jcnlwdGVkUmVzcG9uc2VBbGciIDogbnVsbCwKICAgICAgInJlcXVlc3RQYXJhbWV0ZXJTaWduZWRBbGciIDogbnVsbCwKICAgICAgImNsaWVudEp3dFB1YmxpY0tleSIgOiBudWxsCiAgICB9LAogICAgImFkdmFuY2VkT0F1dGgyQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImdyYW50VHlwZXMiIDogWyAiYXV0aG9yaXphdGlvbl9jb2RlIiwgInBhc3N3b3JkIiBdLAogICAgICAidXBkYXRlQWNjZXNzVG9rZW4iIDogbnVsbCwKICAgICAgInRva2VuRXhjaGFuZ2VBdXRoTGV2ZWwiIDogMCwKICAgICAgInJlcXVlc3RVcmlzIiA6IFsgXSwKICAgICAgImNsaWVudFVyaSIgOiBbIF0sCiAgICAgICJzb2Z0d2FyZVZlcnNpb24iIDogbnVsbCwKICAgICAgIm1peFVwTWl0aWdhdGlvbiIgOiBmYWxzZSwKICAgICAgImxvZ29VcmkiIDogWyBdLAogICAgICAidG9rZW5FbmRwb2ludEF1dGhNZXRob2QiIDogImNsaWVudF9zZWNyZXRfYmFzaWMiLAogICAgICAidG9zVVJJIiA6IFsgXSwKICAgICAgImlzQ29uc2VudEltcGxpZWQiIDogZmFsc2UsCiAgICAgICJzZWN0b3JJZGVudGlmaWVyVXJpIiA6IG51bGwsCiAgICAgICJjb250YWN0cyIgOiBbIF0sCiAgICAgICJzb2Z0d2FyZUlkZW50aXR5IiA6IG51bGwsCiAgICAgICJwb2xpY3lVcmkiIDogWyBdLAogICAgICAicmVzcG9uc2VUeXBlcyIgOiBbICJjb2RlIiwgInRva2VuIiwgImlkX3Rva2VuIiwgImNvZGUgdG9rZW4iLCAidG9rZW4gaWRfdG9rZW4iLCAiY29kZSBpZF90b2tlbiIsICJjb2RlIHRva2VuIGlkX3Rva2VuIiwgImRldmljZV9jb2RlIiwgImRldmljZV9jb2RlIGlkX3Rva2VuIiBdLAogICAgICAiZGVzY3JpcHRpb25zIiA6IFsgXSwKICAgICAgInN1YmplY3RUeXBlIiA6ICJQdWJsaWMiLAogICAgICAibmFtZSIgOiBbIF0sCiAgICAgICJjdXN0b21Qcm9wZXJ0aWVzIiA6IFsgXSwKICAgICAgImphdmFzY3JpcHRPcmlnaW5zIiA6IFsgXQogICAgfSwKICAgICJjb3JlT3BlbklEQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImp3dFRva2VuTGlmZXRpbWUiIDogMCwKICAgICAgImNsaWVudFNlc3Npb25VcmkiIDogbnVsbCwKICAgICAgImJhY2tjaGFubmVsX2xvZ291dF9zZXNzaW9uX3JlcXVpcmVkIiA6IGZhbHNlLAogICAgICAiYmFja2NoYW5uZWxfbG9nb3V0X3VyaSIgOiBudWxsLAogICAgICAicG9zdExvZ291dFJlZGlyZWN0VXJpIiA6IFsgXSwKICAgICAgImRlZmF1bHRNYXhBZ2UiIDogNjAwLAogICAgICAiY2xhaW1zIiA6IFsgXSwKICAgICAgImRlZmF1bHRBY3JWYWx1ZXMiIDogWyBdLAogICAgICAiZGVmYXVsdE1heEFnZUVuYWJsZWQiIDogZmFsc2UKICAgIH0sCiAgICAiY29yZU9BdXRoMkNsaWVudENvbmZpZyIgOiB7CiAgICAgICJsb29wYmFja0ludGVyZmFjZVJlZGlyZWN0aW9uIiA6IGZhbHNlLAogICAgICAiYXV0aG9yaXphdGlvbkNvZGVMaWZldGltZSIgOiAwLAogICAgICAiYWNjZXNzVG9rZW5MaWZldGltZSIgOiAwLAogICAgICAiZGVmYXVsdFNjb3BlcyIgOiBbIF0sCiAgICAgICJjbGllbnROYW1lIiA6IFsgXSwKICAgICAgImNsaWVudFR5cGUiIDogIkNvbmZpZGVudGlhbCIsCiAgICAgICJzY29wZXMiIDogWyAibWFpbCIsICJlbXBsb3llZW51bWJlciIgXSwKICAgICAgImFnZW50Z3JvdXAiIDogbnVsbCwKICAgICAgInJlZnJlc2hUb2tlbkxpZmV0aW1lIiA6IDAsCiAgICAgICJyZWRpcmVjdGlvblVyaXMiIDogWyBdLAogICAgICAic3RhdHVzIiA6ICJBY3RpdmUiCiAgICB9LAogICAgImNvcmVVbWFDbGllbnRDb25maWciIDogewogICAgICAiY2xhaW1zUmVkaXJlY3Rpb25VcmlzIiA6IFsgXQogICAgfSwKICAgICJfdHlwZSIgOiB7CiAgICAgICJfaWQiIDogIk9BdXRoMkNsaWVudCIsCiAgICAgICJuYW1lIiA6ICJPQXV0aDIgQ2xpZW50cyIsCiAgICAgICJjb2xsZWN0aW9uIiA6IHRydWUKICAgIH0KICB9Cn0=
  d8d3b9733a30acda46342a9b3871cf199de2e61f6bdcb14ca61456eda1654e5e: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIk9BdXRoMkNsaWVudHMiLAogICAgImVudGl0eUlkIiA6ICJjbGllbnRPSURDXzAiLAogICAgInBhdGhQYXJhbXMiIDogeyB9CiAgfSwKICAiZGF0YSIgOiB7CiAgICAiX2lkIiA6ICJjbGllbnRPSURDXzAiLAogICAgInNpZ25FbmNPQXV0aDJDbGllbnRDb25maWciIDogewogICAgICAiaWRUb2tlbkVuY3J5cHRpb25NZXRob2QiIDogIkExMjhDQkMtSFMyNTYiLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uU2lnbmVkUmVzcG9uc2VBbGciIDogIlJTMjU2IiwKICAgICAgImp3a1NldCIgOiBudWxsLAogICAgICAiaWRUb2tlbkVuY3J5cHRpb25BbGdvcml0aG0iIDogIlJTQS1PQUVQLTI1NiIsCiAgICAgICJ1c2VyaW5mb1Jlc3BvbnNlRm9ybWF0IiA6ICJKU09OIiwKICAgICAgInRva2VuSW50cm9zcGVjdGlvblJlc3BvbnNlRm9ybWF0IiA6ICJKU09OIiwKICAgICAgIm1UTFNUcnVzdGVkQ2VydCIgOiBudWxsLAogICAgICAiandrc0NhY2hlVGltZW91dCIgOiAzNjAwMDAwLAogICAgICAidXNlcmluZm9TaWduZWRSZXNwb25zZUFsZyIgOiBudWxsLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uRW5jcnlwdGVkUmVzcG9uc2VBbGciIDogIlJTQS1PQUVQLTI1NiIsCiAgICAgICJyZXF1ZXN0UGFyYW1ldGVyRW5jcnlwdGVkQWxnIiA6IG51bGwsCiAgICAgICJ0b2tlbkVuZHBvaW50QXV0aFNpZ25pbmdBbGdvcml0aG0iIDogIlJTMjU2IiwKICAgICAgIm1UTFNTdWJqZWN0RE4iIDogbnVsbCwKICAgICAgImlkVG9rZW5FbmNyeXB0aW9uRW5hYmxlZCIgOiBmYWxzZSwKICAgICAgInVzZXJpbmZvRW5jcnlwdGVkUmVzcG9uc2VFbmNyeXB0aW9uQWxnb3JpdGhtIiA6ICJBMTI4Q0JDLUhTMjU2IiwKICAgICAgInB1YmxpY0tleUxvY2F0aW9uIiA6ICJqd2tzX3VyaSIsCiAgICAgICJtVExTQ2VydGlmaWNhdGVCb3VuZEFjY2Vzc1Rva2VucyIgOiBmYWxzZSwKICAgICAgInRva2VuSW50cm9zcGVjdGlvbkVuY3J5cHRlZFJlc3BvbnNlRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJyZXF1ZXN0UGFyYW1ldGVyRW5jcnlwdGVkRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJqd2tTdG9yZUNhY2hlTWlzc0NhY2hlVGltZSIgOiA2MDAwMCwKICAgICAgImlkVG9rZW5TaWduZWRSZXNwb25zZUFsZyIgOiAiUlMyNTYiLAogICAgICAiaWRUb2tlblB1YmxpY0VuY3J5cHRpb25LZXkiIDogbnVsbCwKICAgICAgImp3a3NVcmkiIDogbnVsbCwKICAgICAgInVzZXJpbmZvRW5jcnlwdGVkUmVzcG9uc2VBbGciIDogbnVsbCwKICAgICAgInJlcXVlc3RQYXJhbWV0ZXJTaWduZWRBbGciIDogbnVsbCwKICAgICAgImNsaWVudEp3dFB1YmxpY0tleSIgOiBudWxsCiAgICB9LAogICAgImFkdmFuY2VkT0F1dGgyQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImdyYW50VHlwZXMiIDogWyAiYXV0aG9yaXphdGlvbl9jb2RlIiBdLAogICAgICAidXBkYXRlQWNjZXNzVG9rZW4iIDogbnVsbCwKICAgICAgInRva2VuRXhjaGFuZ2VBdXRoTGV2ZWwiIDogMCwKICAgICAgInJlcXVlc3RVcmlzIiA6IFsgXSwKICAgICAgImNsaWVudFVyaSIgOiBbIF0sCiAgICAgICJzb2Z0d2FyZVZlcnNpb24iIDogbnVsbCwKICAgICAgIm1peFVwTWl0aWdhdGlvbiIgOiBmYWxzZSwKICAgICAgImxvZ29VcmkiIDogWyBdLAogICAgICAidG9rZW5FbmRwb2ludEF1dGhNZXRob2QiIDogImNsaWVudF9zZWNyZXRfYmFzaWMiLAogICAgICAidG9zVVJJIiA6IFsgXSwKICAgICAgInNlY3RvcklkZW50aWZpZXJVcmkiIDogbnVsbCwKICAgICAgImlzQ29uc2VudEltcGxpZWQiIDogZmFsc2UsCiAgICAgICJjb250YWN0cyIgOiBbIF0sCiAgICAgICJzb2Z0d2FyZUlkZW50aXR5IiA6IG51bGwsCiAgICAgICJwb2xpY3lVcmkiIDogWyBdLAogICAgICAicmVzcG9uc2VUeXBlcyIgOiBbICJjb2RlIiwgInRva2VuIiwgImlkX3Rva2VuIiwgImNvZGUgdG9rZW4iLCAidG9rZW4gaWRfdG9rZW4iLCAiY29kZSBpZF90b2tlbiIsICJjb2RlIHRva2VuIGlkX3Rva2VuIiwgImRldmljZV9jb2RlIiwgImRldmljZV9jb2RlIGlkX3Rva2VuIiBdLAogICAgICAiZGVzY3JpcHRpb25zIiA6IFsgXSwKICAgICAgInN1YmplY3RUeXBlIiA6ICJQdWJsaWMiLAogICAgICAibmFtZSIgOiBbIF0sCiAgICAgICJjdXN0b21Qcm9wZXJ0aWVzIiA6IFsgXSwKICAgICAgImphdmFzY3JpcHRPcmlnaW5zIiA6IFsgXQogICAgfSwKICAgICJjb3JlT3BlbklEQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImp3dFRva2VuTGlmZXRpbWUiIDogMCwKICAgICAgImNsaWVudFNlc3Npb25VcmkiIDogbnVsbCwKICAgICAgImJhY2tjaGFubmVsX2xvZ291dF91cmkiIDogbnVsbCwKICAgICAgImJhY2tjaGFubmVsX2xvZ291dF9zZXNzaW9uX3JlcXVpcmVkIiA6IGZhbHNlLAogICAgICAicG9zdExvZ291dFJlZGlyZWN0VXJpIiA6IFsgXSwKICAgICAgImRlZmF1bHRNYXhBZ2UiIDogNjAwLAogICAgICAiY2xhaW1zIiA6IFsgXSwKICAgICAgImRlZmF1bHRBY3JWYWx1ZXMiIDogWyBdLAogICAgICAiZGVmYXVsdE1heEFnZUVuYWJsZWQiIDogZmFsc2UKICAgIH0sCiAgICAiY29yZU9BdXRoMkNsaWVudENvbmZpZyIgOiB7CiAgICAgICJsb29wYmFja0ludGVyZmFjZVJlZGlyZWN0aW9uIiA6IGZhbHNlLAogICAgICAiYXV0aG9yaXphdGlvbkNvZGVMaWZldGltZSIgOiAxMjAsCiAgICAgICJhY2Nlc3NUb2tlbkxpZmV0aW1lIiA6IDM2MDAsCiAgICAgICJkZWZhdWx0U2NvcGVzIiA6IFsgImNuIiBdLAogICAgICAiY2xpZW50TmFtZSIgOiBbIF0sCiAgICAgICJjbGllbnRUeXBlIiA6ICJDb25maWRlbnRpYWwiLAogICAgICAic2NvcGVzIiA6IFsgInByb2ZpbGUiLCAiZW1haWwiLCAib3BlbmlkIiBdLAogICAgICAiYWdlbnRncm91cCIgOiBudWxsLAogICAgICAicmVmcmVzaFRva2VuTGlmZXRpbWUiIDogNjA0ODAwLAogICAgICAicmVkaXJlY3Rpb25VcmlzIiA6IFsgImh0dHA6Ly9mYWtlLmNvbSIgXSwKICAgICAgInN0YXR1cyIgOiAiQWN0aXZlIgogICAgfSwKICAgICJjb3JlVW1hQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImNsYWltc1JlZGlyZWN0aW9uVXJpcyIgOiBbIF0KICAgIH0sCiAgICAiX3R5cGUiIDogewogICAgICAiX2lkIiA6ICJPQXV0aDJDbGllbnQiLAogICAgICAibmFtZSIgOiAiT0F1dGgyIENsaWVudHMiLAogICAgICAiY29sbGVjdGlvbiIgOiB0cnVlCiAgICB9CiAgfQp9
  b992a5572abd75c14e11c7a4cc59c4c57927dfb18563746faf2fbf17cde41e01: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIk9BdXRoMkNsaWVudHMiLAogICAgImVudGl0eUlkIiA6ICJlbmQtdXNlci11aSIsCiAgICAicGF0aFBhcmFtcyIgOiB7IH0KICB9LAogICJkYXRhIiA6IHsKICAgICJfaWQiIDogImVuZC11c2VyLXVpIiwKICAgICJzaWduRW5jT0F1dGgyQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImlkVG9rZW5FbmNyeXB0aW9uTWV0aG9kIiA6ICJBMTI4Q0JDLUhTMjU2IiwKICAgICAgInRva2VuSW50cm9zcGVjdGlvblNpZ25lZFJlc3BvbnNlQWxnIiA6ICJSUzI1NiIsCiAgICAgICJqd2tTZXQiIDogbnVsbCwKICAgICAgImlkVG9rZW5FbmNyeXB0aW9uQWxnb3JpdGhtIiA6ICJSU0EtT0FFUC0yNTYiLAogICAgICAidXNlcmluZm9SZXNwb25zZUZvcm1hdCIgOiAiSlNPTiIsCiAgICAgICJ0b2tlbkludHJvc3BlY3Rpb25SZXNwb25zZUZvcm1hdCIgOiAiSlNPTiIsCiAgICAgICJtVExTVHJ1c3RlZENlcnQiIDogbnVsbCwKICAgICAgImp3a3NDYWNoZVRpbWVvdXQiIDogMzYwMDAwMCwKICAgICAgInRva2VuSW50cm9zcGVjdGlvbkVuY3J5cHRlZFJlc3BvbnNlQWxnIiA6ICJSU0EtT0FFUC0yNTYiLAogICAgICAidXNlcmluZm9TaWduZWRSZXNwb25zZUFsZyIgOiBudWxsLAogICAgICAidG9rZW5FbmRwb2ludEF1dGhTaWduaW5nQWxnb3JpdGhtIiA6ICJSUzI1NiIsCiAgICAgICJyZXF1ZXN0UGFyYW1ldGVyRW5jcnlwdGVkQWxnIiA6IG51bGwsCiAgICAgICJtVExTU3ViamVjdEROIiA6IG51bGwsCiAgICAgICJpZFRva2VuRW5jcnlwdGlvbkVuYWJsZWQiIDogZmFsc2UsCiAgICAgICJ1c2VyaW5mb0VuY3J5cHRlZFJlc3BvbnNlRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJwdWJsaWNLZXlMb2NhdGlvbiIgOiAiandrc191cmkiLAogICAgICAibVRMU0NlcnRpZmljYXRlQm91bmRBY2Nlc3NUb2tlbnMiIDogZmFsc2UsCiAgICAgICJ0b2tlbkludHJvc3BlY3Rpb25FbmNyeXB0ZWRSZXNwb25zZUVuY3J5cHRpb25BbGdvcml0aG0iIDogIkExMjhDQkMtSFMyNTYiLAogICAgICAicmVxdWVzdFBhcmFtZXRlckVuY3J5cHRlZEVuY3J5cHRpb25BbGdvcml0aG0iIDogIkExMjhDQkMtSFMyNTYiLAogICAgICAiandrU3RvcmVDYWNoZU1pc3NDYWNoZVRpbWUiIDogNjAwMDAsCiAgICAgICJpZFRva2VuU2lnbmVkUmVzcG9uc2VBbGciIDogIlJTMjU2IiwKICAgICAgImlkVG9rZW5QdWJsaWNFbmNyeXB0aW9uS2V5IiA6IG51bGwsCiAgICAgICJqd2tzVXJpIiA6IG51bGwsCiAgICAgICJ1c2VyaW5mb0VuY3J5cHRlZFJlc3BvbnNlQWxnIiA6IG51bGwsCiAgICAgICJyZXF1ZXN0UGFyYW1ldGVyU2lnbmVkQWxnIiA6IG51bGwsCiAgICAgICJjbGllbnRKd3RQdWJsaWNLZXkiIDogbnVsbAogICAgfSwKICAgICJhZHZhbmNlZE9BdXRoMkNsaWVudENvbmZpZyIgOiB7CiAgICAgICJncmFudFR5cGVzIiA6IFsgImF1dGhvcml6YXRpb25fY29kZSIsICJpbXBsaWNpdCIgXSwKICAgICAgInVwZGF0ZUFjY2Vzc1Rva2VuIiA6IG51bGwsCiAgICAgICJ0b2tlbkV4Y2hhbmdlQXV0aExldmVsIiA6IDAsCiAgICAgICJyZXF1ZXN0VXJpcyIgOiBbIF0sCiAgICAgICJjbGllbnRVcmkiIDogWyBdLAogICAgICAic29mdHdhcmVWZXJzaW9uIiA6IG51bGwsCiAgICAgICJtaXhVcE1pdGlnYXRpb24iIDogZmFsc2UsCiAgICAgICJsb2dvVXJpIiA6IFsgXSwKICAgICAgInRva2VuRW5kcG9pbnRBdXRoTWV0aG9kIiA6ICJjbGllbnRfc2VjcmV0X3Bvc3QiLAogICAgICAidG9zVVJJIiA6IFsgXSwKICAgICAgInNlY3RvcklkZW50aWZpZXJVcmkiIDogbnVsbCwKICAgICAgImlzQ29uc2VudEltcGxpZWQiIDogdHJ1ZSwKICAgICAgImNvbnRhY3RzIiA6IFsgXSwKICAgICAgInNvZnR3YXJlSWRlbnRpdHkiIDogbnVsbCwKICAgICAgInBvbGljeVVyaSIgOiBbIF0sCiAgICAgICJyZXNwb25zZVR5cGVzIiA6IFsgImNvZGUiLCAidG9rZW4iLCAiaWRfdG9rZW4iLCAiY29kZSB0b2tlbiIsICJ0b2tlbiBpZF90b2tlbiIsICJjb2RlIGlkX3Rva2VuIiwgImNvZGUgdG9rZW4gaWRfdG9rZW4iLCAiZGV2aWNlX2NvZGUiLCAiZGV2aWNlX2NvZGUgaWRfdG9rZW4iIF0sCiAgICAgICJkZXNjcmlwdGlvbnMiIDogWyBdLAogICAgICAic3ViamVjdFR5cGUiIDogIlB1YmxpYyIsCiAgICAgICJuYW1lIiA6IFsgXSwKICAgICAgImN1c3RvbVByb3BlcnRpZXMiIDogWyBdLAogICAgICAiamF2YXNjcmlwdE9yaWdpbnMiIDogWyBdCiAgICB9LAogICAgImNvcmVPcGVuSURDbGllbnRDb25maWciIDogewogICAgICAiand0VG9rZW5MaWZldGltZSIgOiAwLAogICAgICAiY2xpZW50U2Vzc2lvblVyaSIgOiBudWxsLAogICAgICAiYmFja2NoYW5uZWxfbG9nb3V0X3VyaSIgOiBudWxsLAogICAgICAiYmFja2NoYW5uZWxfbG9nb3V0X3Nlc3Npb25fcmVxdWlyZWQiIDogZmFsc2UsCiAgICAgICJwb3N0TG9nb3V0UmVkaXJlY3RVcmkiIDogWyBdLAogICAgICAiZGVmYXVsdE1heEFnZSIgOiA2MDAsCiAgICAgICJjbGFpbXMiIDogWyBdLAogICAgICAiZGVmYXVsdEFjclZhbHVlcyIgOiBbIF0sCiAgICAgICJkZWZhdWx0TWF4QWdlRW5hYmxlZCIgOiBmYWxzZQogICAgfSwKICAgICJjb3JlT0F1dGgyQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImxvb3BiYWNrSW50ZXJmYWNlUmVkaXJlY3Rpb24iIDogZmFsc2UsCiAgICAgICJhdXRob3JpemF0aW9uQ29kZUxpZmV0aW1lIiA6IDAsCiAgICAgICJhY2Nlc3NUb2tlbkxpZmV0aW1lIiA6IDI0MCwKICAgICAgImRlZmF1bHRTY29wZXMiIDogWyBdLAogICAgICAiY2xpZW50TmFtZSIgOiBbIF0sCiAgICAgICJjbGllbnRUeXBlIiA6ICJQdWJsaWMiLAogICAgICAic2NvcGVzIiA6IFsgIm9wZW5pZCIsICJmcjppZG06KiIgXSwKICAgICAgImFnZW50Z3JvdXAiIDogbnVsbCwKICAgICAgInJlZnJlc2hUb2tlbkxpZmV0aW1lIiA6IDAsCiAgICAgICJyZWRpcmVjdGlvblVyaXMiIDogWyAiaHR0cHM6Ly8me2ZxZG59L2VuZHVzZXIvYXBwQXV0aEhlbHBlclJlZGlyZWN0Lmh0bWwiLCAiaHR0cHM6Ly8me2ZxZG59L2VuZHVzZXIvc2Vzc2lvbkNoZWNrLmh0bWwiLCAiaHR0cDovL2xvY2FsaG9zdDo4ODg4L2FwcEF1dGhIZWxwZXJSZWRpcmVjdC5odG1sIiwgImh0dHA6Ly9sb2NhbGhvc3Q6ODg4OC9zZXNzaW9uQ2hlY2suaHRtbCIgXSwKICAgICAgInN0YXR1cyIgOiAiQWN0aXZlIgogICAgfSwKICAgICJjb3JlVW1hQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImNsYWltc1JlZGlyZWN0aW9uVXJpcyIgOiBbIF0KICAgIH0sCiAgICAiX3R5cGUiIDogewogICAgICAiX2lkIiA6ICJPQXV0aDJDbGllbnQiLAogICAgICAibmFtZSIgOiAiT0F1dGgyIENsaWVudHMiLAogICAgICAiY29sbGVjdGlvbiIgOiB0cnVlCiAgICB9CiAgfQp9
  90985fa04421866c455581fc1aaa7918f4c54703d0754dee57f99736d47972c2: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIk9BdXRoMkNsaWVudHMiLAogICAgImVudGl0eUlkIiA6ICJpZG0tYWRtaW4tdWkiLAogICAgInBhdGhQYXJhbXMiIDogeyB9CiAgfSwKICAiZGF0YSIgOiB7CiAgICAiX2lkIiA6ICJpZG0tYWRtaW4tdWkiLAogICAgInNpZ25FbmNPQXV0aDJDbGllbnRDb25maWciIDogewogICAgICAiaWRUb2tlbkVuY3J5cHRpb25NZXRob2QiIDogIkExMjhDQkMtSFMyNTYiLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uU2lnbmVkUmVzcG9uc2VBbGciIDogIlJTMjU2IiwKICAgICAgImp3a1NldCIgOiBudWxsLAogICAgICAiaWRUb2tlbkVuY3J5cHRpb25BbGdvcml0aG0iIDogIlJTQS1PQUVQLTI1NiIsCiAgICAgICJ1c2VyaW5mb1Jlc3BvbnNlRm9ybWF0IiA6ICJKU09OIiwKICAgICAgInRva2VuSW50cm9zcGVjdGlvblJlc3BvbnNlRm9ybWF0IiA6ICJKU09OIiwKICAgICAgIm1UTFNUcnVzdGVkQ2VydCIgOiBudWxsLAogICAgICAiandrc0NhY2hlVGltZW91dCIgOiAzNjAwMDAwLAogICAgICAidXNlcmluZm9TaWduZWRSZXNwb25zZUFsZyIgOiBudWxsLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uRW5jcnlwdGVkUmVzcG9uc2VBbGciIDogIlJTQS1PQUVQLTI1NiIsCiAgICAgICJyZXF1ZXN0UGFyYW1ldGVyRW5jcnlwdGVkQWxnIiA6IG51bGwsCiAgICAgICJ0b2tlbkVuZHBvaW50QXV0aFNpZ25pbmdBbGdvcml0aG0iIDogIlJTMjU2IiwKICAgICAgIm1UTFNTdWJqZWN0RE4iIDogbnVsbCwKICAgICAgImlkVG9rZW5FbmNyeXB0aW9uRW5hYmxlZCIgOiBmYWxzZSwKICAgICAgInVzZXJpbmZvRW5jcnlwdGVkUmVzcG9uc2VFbmNyeXB0aW9uQWxnb3JpdGhtIiA6ICJBMTI4Q0JDLUhTMjU2IiwKICAgICAgInB1YmxpY0tleUxvY2F0aW9uIiA6ICJqd2tzX3VyaSIsCiAgICAgICJtVExTQ2VydGlmaWNhdGVCb3VuZEFjY2Vzc1Rva2VucyIgOiBmYWxzZSwKICAgICAgInRva2VuSW50cm9zcGVjdGlvbkVuY3J5cHRlZFJlc3BvbnNlRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJyZXF1ZXN0UGFyYW1ldGVyRW5jcnlwdGVkRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJqd2tTdG9yZUNhY2hlTWlzc0NhY2hlVGltZSIgOiA2MDAwMCwKICAgICAgImlkVG9rZW5TaWduZWRSZXNwb25zZUFsZyIgOiAiUlMyNTYiLAogICAgICAiaWRUb2tlblB1YmxpY0VuY3J5cHRpb25LZXkiIDogbnVsbCwKICAgICAgInVzZXJpbmZvRW5jcnlwdGVkUmVzcG9uc2VBbGciIDogbnVsbCwKICAgICAgImp3a3NVcmkiIDogbnVsbCwKICAgICAgInJlcXVlc3RQYXJhbWV0ZXJTaWduZWRBbGciIDogbnVsbCwKICAgICAgImNsaWVudEp3dFB1YmxpY0tleSIgOiBudWxsCiAgICB9LAogICAgImFkdmFuY2VkT0F1dGgyQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImdyYW50VHlwZXMiIDogWyAiYXV0aG9yaXphdGlvbl9jb2RlIiwgImltcGxpY2l0IiBdLAogICAgICAidXBkYXRlQWNjZXNzVG9rZW4iIDogbnVsbCwKICAgICAgInRva2VuRXhjaGFuZ2VBdXRoTGV2ZWwiIDogMCwKICAgICAgInJlcXVlc3RVcmlzIiA6IFsgXSwKICAgICAgImNsaWVudFVyaSIgOiBbIF0sCiAgICAgICJzb2Z0d2FyZVZlcnNpb24iIDogbnVsbCwKICAgICAgIm1peFVwTWl0aWdhdGlvbiIgOiBmYWxzZSwKICAgICAgImxvZ29VcmkiIDogWyBdLAogICAgICAidG9rZW5FbmRwb2ludEF1dGhNZXRob2QiIDogImNsaWVudF9zZWNyZXRfcG9zdCIsCiAgICAgICJ0b3NVUkkiIDogWyBdLAogICAgICAic2VjdG9ySWRlbnRpZmllclVyaSIgOiBudWxsLAogICAgICAiaXNDb25zZW50SW1wbGllZCIgOiB0cnVlLAogICAgICAiY29udGFjdHMiIDogWyBdLAogICAgICAic29mdHdhcmVJZGVudGl0eSIgOiBudWxsLAogICAgICAicmVzcG9uc2VUeXBlcyIgOiBbICJjb2RlIiwgInRva2VuIiwgImlkX3Rva2VuIiwgImNvZGUgdG9rZW4iLCAidG9rZW4gaWRfdG9rZW4iLCAiY29kZSBpZF90b2tlbiIsICJjb2RlIHRva2VuIGlkX3Rva2VuIiwgImRldmljZV9jb2RlIiwgImRldmljZV9jb2RlIGlkX3Rva2VuIiBdLAogICAgICAicG9saWN5VXJpIiA6IFsgXSwKICAgICAgImRlc2NyaXB0aW9ucyIgOiBbIF0sCiAgICAgICJzdWJqZWN0VHlwZSIgOiAiUHVibGljIiwKICAgICAgIm5hbWUiIDogWyBdLAogICAgICAiY3VzdG9tUHJvcGVydGllcyIgOiBbIF0sCiAgICAgICJqYXZhc2NyaXB0T3JpZ2lucyIgOiBbIF0KICAgIH0sCiAgICAiY29yZU9wZW5JRENsaWVudENvbmZpZyIgOiB7CiAgICAgICJqd3RUb2tlbkxpZmV0aW1lIiA6IDAsCiAgICAgICJjbGllbnRTZXNzaW9uVXJpIiA6IG51bGwsCiAgICAgICJiYWNrY2hhbm5lbF9sb2dvdXRfdXJpIiA6IG51bGwsCiAgICAgICJiYWNrY2hhbm5lbF9sb2dvdXRfc2Vzc2lvbl9yZXF1aXJlZCIgOiBmYWxzZSwKICAgICAgInBvc3RMb2dvdXRSZWRpcmVjdFVyaSIgOiBbIF0sCiAgICAgICJkZWZhdWx0TWF4QWdlIiA6IDYwMCwKICAgICAgImNsYWltcyIgOiBbIF0sCiAgICAgICJkZWZhdWx0QWNyVmFsdWVzIiA6IFsgXSwKICAgICAgImRlZmF1bHRNYXhBZ2VFbmFibGVkIiA6IGZhbHNlCiAgICB9LAogICAgImNvcmVPQXV0aDJDbGllbnRDb25maWciIDogewogICAgICAibG9vcGJhY2tJbnRlcmZhY2VSZWRpcmVjdGlvbiIgOiBmYWxzZSwKICAgICAgImF1dGhvcml6YXRpb25Db2RlTGlmZXRpbWUiIDogMCwKICAgICAgImFjY2Vzc1Rva2VuTGlmZXRpbWUiIDogMjQwLAogICAgICAiZGVmYXVsdFNjb3BlcyIgOiBbIF0sCiAgICAgICJjbGllbnROYW1lIiA6IFsgXSwKICAgICAgImNsaWVudFR5cGUiIDogIlB1YmxpYyIsCiAgICAgICJzY29wZXMiIDogWyAib3BlbmlkIiwgImZyOmlkbToqIiBdLAogICAgICAiYWdlbnRncm91cCIgOiBudWxsLAogICAgICAicmVmcmVzaFRva2VuTGlmZXRpbWUiIDogMCwKICAgICAgInJlZGlyZWN0aW9uVXJpcyIgOiBbICJodHRwczovLyZ7ZnFkbn0vcGxhdGZvcm0vYXBwQXV0aEhlbHBlclJlZGlyZWN0Lmh0bWwiLCAiaHR0cHM6Ly8me2ZxZG59L3BsYXRmb3JtL3Nlc3Npb25DaGVjay5odG1sIiwgImh0dHBzOi8vJntmcWRufS9hZG1pbi9hcHBBdXRoSGVscGVyUmVkaXJlY3QuaHRtbCIsICJodHRwczovLyZ7ZnFkbn0vYWRtaW4vc2Vzc2lvbkNoZWNrLmh0bWwiLCAiaHR0cDovL2xvY2FsaG9zdDo4MDgyL2FwcEF1dGhIZWxwZXJSZWRpcmVjdC5odG1sIiwgImh0dHA6Ly9sb2NhbGhvc3Q6ODA4Mi9zZXNzaW9uQ2hlY2suaHRtbCIgXSwKICAgICAgInN0YXR1cyIgOiAiQWN0aXZlIgogICAgfSwKICAgICJjb3JlVW1hQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImNsYWltc1JlZGlyZWN0aW9uVXJpcyIgOiBbIF0KICAgIH0sCiAgICAiX3R5cGUiIDogewogICAgICAiX2lkIiA6ICJPQXV0aDJDbGllbnQiLAogICAgICAibmFtZSIgOiAiT0F1dGgyIENsaWVudHMiLAogICAgICAiY29sbGVjdGlvbiIgOiB0cnVlCiAgICB9CiAgfQp9
  82dc89d29679e4d5f5265691d9f5b0efaa06e061dae43b25238a1af0077d5fe6: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIk9BdXRoMkNsaWVudHMiLAogICAgImVudGl0eUlkIiA6ICJpZG0tcHJvdmlzaW9uaW5nIiwKICAgICJwYXRoUGFyYW1zIiA6IHsgfQogIH0sCiAgImRhdGEiIDogewogICAgIl9pZCIgOiAiaWRtLXByb3Zpc2lvbmluZyIsCiAgICAiY29yZU9BdXRoMkNsaWVudENvbmZpZyIgOiB7CiAgICAgICJ1c2VycGFzc3dvcmQiIDogIiZ7aWRtLnByb3Zpc2lvbmluZy5jbGllbnQuc2VjcmV0fG9wZW5pZG19IiwKICAgICAgImxvb3BiYWNrSW50ZXJmYWNlUmVkaXJlY3Rpb24iIDogZmFsc2UsCiAgICAgICJkZWZhdWx0U2NvcGVzIiA6IFsgXSwKICAgICAgInJlZnJlc2hUb2tlbkxpZmV0aW1lIiA6IDAsCiAgICAgICJzY29wZXMiIDogWyAib3BlbmlkIiwgImZyOmlkbToqIiBdLAogICAgICAic3RhdHVzIiA6ICJBY3RpdmUiLAogICAgICAiYWNjZXNzVG9rZW5MaWZldGltZSIgOiAwLAogICAgICAicmVkaXJlY3Rpb25VcmlzIiA6IFsgXSwKICAgICAgImNsaWVudE5hbWUiIDogWyBdLAogICAgICAiY2xpZW50VHlwZSIgOiAiQ29uZmlkZW50aWFsIiwKICAgICAgImF1dGhvcml6YXRpb25Db2RlTGlmZXRpbWUiIDogMAogICAgfSwKICAgICJhZHZhbmNlZE9BdXRoMkNsaWVudENvbmZpZyIgOiB7CiAgICAgICJtaXhVcE1pdGlnYXRpb24iIDogZmFsc2UsCiAgICAgICJzb2Z0d2FyZVZlcnNpb24iIDogbnVsbCwKICAgICAgInRva2VuRW5kcG9pbnRBdXRoTWV0aG9kIiA6ICJjbGllbnRfc2VjcmV0X2Jhc2ljIiwKICAgICAgImNsaWVudFVyaSIgOiBbIF0sCiAgICAgICJkZXNjcmlwdGlvbnMiIDogWyBdLAogICAgICAidG9rZW5FeGNoYW5nZUF1dGhMZXZlbCIgOiAwLAogICAgICAiZ3JhbnRUeXBlcyIgOiBbICJjbGllbnRfY3JlZGVudGlhbHMiIF0sCiAgICAgICJ1cGRhdGVBY2Nlc3NUb2tlbiIgOiBudWxsLAogICAgICAibmFtZSIgOiBbIF0sCiAgICAgICJzb2Z0d2FyZUlkZW50aXR5IiA6IG51bGwsCiAgICAgICJjb250YWN0cyIgOiBbIF0sCiAgICAgICJyZXNwb25zZVR5cGVzIiA6IFsgImNvZGUiLCAidG9rZW4iLCAiaWRfdG9rZW4iLCAiY29kZSB0b2tlbiIsICJ0b2tlbiBpZF90b2tlbiIsICJjb2RlIGlkX3Rva2VuIiwgImNvZGUgdG9rZW4gaWRfdG9rZW4iLCAiZGV2aWNlX2NvZGUiLCAiZGV2aWNlX2NvZGUgaWRfdG9rZW4iIF0sCiAgICAgICJzdWJqZWN0VHlwZSIgOiAicHVibGljIiwKICAgICAgInNlY3RvcklkZW50aWZpZXJVcmkiIDogbnVsbCwKICAgICAgInJlcXVlc3RVcmlzIiA6IFsgXSwKICAgICAgImN1c3RvbVByb3BlcnRpZXMiIDogWyBdLAogICAgICAidG9zVVJJIiA6IFsgXSwKICAgICAgInBvbGljeVVyaSIgOiBbIF0sCiAgICAgICJpc0NvbnNlbnRJbXBsaWVkIiA6IHRydWUsCiAgICAgICJsb2dvVXJpIiA6IFsgXSwKICAgICAgImphdmFzY3JpcHRPcmlnaW5zIiA6IFsgXQogICAgfSwKICAgICJzaWduRW5jT0F1dGgyQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgInRva2VuRW5kcG9pbnRBdXRoU2lnbmluZ0FsZ29yaXRobSIgOiAiUlMyNTYiLAogICAgICAiaWRUb2tlbkVuY3J5cHRpb25FbmFibGVkIiA6IGZhbHNlLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uRW5jcnlwdGVkUmVzcG9uc2VFbmNyeXB0aW9uQWxnb3JpdGhtIiA6ICJBMTI4Q0JDLUhTMjU2IiwKICAgICAgInJlcXVlc3RQYXJhbWV0ZXJTaWduZWRBbGciIDogbnVsbCwKICAgICAgImNsaWVudEp3dFB1YmxpY0tleSIgOiBudWxsLAogICAgICAiaWRUb2tlblB1YmxpY0VuY3J5cHRpb25LZXkiIDogbnVsbCwKICAgICAgIm1UTFNTdWJqZWN0RE4iIDogbnVsbCwKICAgICAgInVzZXJpbmZvUmVzcG9uc2VGb3JtYXQiIDogIkpTT04iLAogICAgICAibVRMU0NlcnRpZmljYXRlQm91bmRBY2Nlc3NUb2tlbnMiIDogZmFsc2UsCiAgICAgICJwdWJsaWNLZXlMb2NhdGlvbiIgOiAiandrc191cmkiLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uUmVzcG9uc2VGb3JtYXQiIDogIkpTT04iLAogICAgICAiandrU3RvcmVDYWNoZU1pc3NDYWNoZVRpbWUiIDogNjAwMDAsCiAgICAgICJyZXF1ZXN0UGFyYW1ldGVyRW5jcnlwdGVkRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJ1c2VyaW5mb1NpZ25lZFJlc3BvbnNlQWxnIiA6IG51bGwsCiAgICAgICJpZFRva2VuRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiUlNBLU9BRVAtMjU2IiwKICAgICAgInJlcXVlc3RQYXJhbWV0ZXJFbmNyeXB0ZWRBbGciIDogbnVsbCwKICAgICAgIm1UTFNUcnVzdGVkQ2VydCIgOiBudWxsLAogICAgICAiandrU2V0IiA6IG51bGwsCiAgICAgICJpZFRva2VuRW5jcnlwdGlvbk1ldGhvZCIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJqd2tzQ2FjaGVUaW1lb3V0IiA6IDM2MDAwMDAsCiAgICAgICJ1c2VyaW5mb0VuY3J5cHRlZFJlc3BvbnNlQWxnIiA6IG51bGwsCiAgICAgICJpZFRva2VuU2lnbmVkUmVzcG9uc2VBbGciIDogIlJTMjU2IiwKICAgICAgImp3a3NVcmkiIDogbnVsbCwKICAgICAgInRva2VuSW50cm9zcGVjdGlvblNpZ25lZFJlc3BvbnNlQWxnIiA6ICJSUzI1NiIsCiAgICAgICJ1c2VyaW5mb0VuY3J5cHRlZFJlc3BvbnNlRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJ0b2tlbkludHJvc3BlY3Rpb25FbmNyeXB0ZWRSZXNwb25zZUFsZyIgOiAiUlNBLU9BRVAtMjU2IgogICAgfSwKICAgICJjb3JlT3BlbklEQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImNsYWltcyIgOiBbIF0sCiAgICAgICJjbGllbnRTZXNzaW9uVXJpIiA6IG51bGwsCiAgICAgICJiYWNrY2hhbm5lbF9sb2dvdXRfdXJpIiA6IG51bGwsCiAgICAgICJkZWZhdWx0QWNyVmFsdWVzIiA6IFsgXSwKICAgICAgImp3dFRva2VuTGlmZXRpbWUiIDogMCwKICAgICAgImRlZmF1bHRNYXhBZ2VFbmFibGVkIiA6IGZhbHNlLAogICAgICAiZGVmYXVsdE1heEFnZSIgOiA2MDAsCiAgICAgICJwb3N0TG9nb3V0UmVkaXJlY3RVcmkiIDogWyBdLAogICAgICAiYmFja2NoYW5uZWxfbG9nb3V0X3Nlc3Npb25fcmVxdWlyZWQiIDogZmFsc2UKICAgIH0sCiAgICAiY29yZVVtYUNsaWVudENvbmZpZyIgOiB7CiAgICAgICJjbGFpbXNSZWRpcmVjdGlvblVyaXMiIDogWyBdCiAgICB9LAogICAgIl90eXBlIiA6IHsKICAgICAgIl9pZCIgOiAiT0F1dGgyQ2xpZW50IiwKICAgICAgIm5hbWUiIDogIk9BdXRoMiBDbGllbnRzIiwKICAgICAgImNvbGxlY3Rpb24iIDogdHJ1ZQogICAgfQogIH0KfQ==
  44c1bed9b66036d441b622856c289d83714e7e7801c137a8f6f3aa0738f63b14: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIk9BdXRoMkNsaWVudHMiLAogICAgImVudGl0eUlkIiA6ICJpZG0tcmVzb3VyY2Utc2VydmVyIiwKICAgICJwYXRoUGFyYW1zIiA6IHsgfQogIH0sCiAgImRhdGEiIDogewogICAgIl9pZCIgOiAiaWRtLXJlc291cmNlLXNlcnZlciIsCiAgICAic2lnbkVuY09BdXRoMkNsaWVudENvbmZpZyIgOiB7CiAgICAgICJpZFRva2VuRW5jcnlwdGlvbk1ldGhvZCIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJ0b2tlbkludHJvc3BlY3Rpb25TaWduZWRSZXNwb25zZUFsZyIgOiAiUlMyNTYiLAogICAgICAiandrU2V0IiA6IG51bGwsCiAgICAgICJpZFRva2VuRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiUlNBLU9BRVAtMjU2IiwKICAgICAgInVzZXJpbmZvUmVzcG9uc2VGb3JtYXQiIDogIkpTT04iLAogICAgICAibVRMU1RydXN0ZWRDZXJ0IiA6IG51bGwsCiAgICAgICJ0b2tlbkludHJvc3BlY3Rpb25SZXNwb25zZUZvcm1hdCIgOiAiSlNPTiIsCiAgICAgICJqd2tzQ2FjaGVUaW1lb3V0IiA6IDM2MDAwMDAsCiAgICAgICJ1c2VyaW5mb1NpZ25lZFJlc3BvbnNlQWxnIiA6IG51bGwsCiAgICAgICJ0b2tlbkludHJvc3BlY3Rpb25FbmNyeXB0ZWRSZXNwb25zZUFsZyIgOiAiUlNBLU9BRVAtMjU2IiwKICAgICAgInRva2VuRW5kcG9pbnRBdXRoU2lnbmluZ0FsZ29yaXRobSIgOiAiUlMyNTYiLAogICAgICAicmVxdWVzdFBhcmFtZXRlckVuY3J5cHRlZEFsZyIgOiBudWxsLAogICAgICAibVRMU1N1YmplY3RETiIgOiBudWxsLAogICAgICAiaWRUb2tlbkVuY3J5cHRpb25FbmFibGVkIiA6IGZhbHNlLAogICAgICAidXNlcmluZm9FbmNyeXB0ZWRSZXNwb25zZUVuY3J5cHRpb25BbGdvcml0aG0iIDogIkExMjhDQkMtSFMyNTYiLAogICAgICAicHVibGljS2V5TG9jYXRpb24iIDogImp3a3NfdXJpIiwKICAgICAgIm1UTFNDZXJ0aWZpY2F0ZUJvdW5kQWNjZXNzVG9rZW5zIiA6IGZhbHNlLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uRW5jcnlwdGVkUmVzcG9uc2VFbmNyeXB0aW9uQWxnb3JpdGhtIiA6ICJBMTI4Q0JDLUhTMjU2IiwKICAgICAgInJlcXVlc3RQYXJhbWV0ZXJFbmNyeXB0ZWRFbmNyeXB0aW9uQWxnb3JpdGhtIiA6ICJBMTI4Q0JDLUhTMjU2IiwKICAgICAgImp3a1N0b3JlQ2FjaGVNaXNzQ2FjaGVUaW1lIiA6IDYwMDAwLAogICAgICAiaWRUb2tlblNpZ25lZFJlc3BvbnNlQWxnIiA6ICJSUzI1NiIsCiAgICAgICJpZFRva2VuUHVibGljRW5jcnlwdGlvbktleSIgOiBudWxsLAogICAgICAiandrc1VyaSIgOiBudWxsLAogICAgICAidXNlcmluZm9FbmNyeXB0ZWRSZXNwb25zZUFsZyIgOiBudWxsLAogICAgICAicmVxdWVzdFBhcmFtZXRlclNpZ25lZEFsZyIgOiBudWxsLAogICAgICAiY2xpZW50Snd0UHVibGljS2V5IiA6IG51bGwKICAgIH0sCiAgICAiYWR2YW5jZWRPQXV0aDJDbGllbnRDb25maWciIDogewogICAgICAiZ3JhbnRUeXBlcyIgOiBbICJhdXRob3JpemF0aW9uX2NvZGUiIF0sCiAgICAgICJ1cGRhdGVBY2Nlc3NUb2tlbiIgOiBudWxsLAogICAgICAidG9rZW5FeGNoYW5nZUF1dGhMZXZlbCIgOiAwLAogICAgICAicmVxdWVzdFVyaXMiIDogWyBdLAogICAgICAiY2xpZW50VXJpIiA6IFsgXSwKICAgICAgInNvZnR3YXJlVmVyc2lvbiIgOiBudWxsLAogICAgICAibWl4VXBNaXRpZ2F0aW9uIiA6IGZhbHNlLAogICAgICAibG9nb1VyaSIgOiBbIF0sCiAgICAgICJ0b2tlbkVuZHBvaW50QXV0aE1ldGhvZCIgOiAiY2xpZW50X3NlY3JldF9iYXNpYyIsCiAgICAgICJ0b3NVUkkiIDogWyBdLAogICAgICAic2VjdG9ySWRlbnRpZmllclVyaSIgOiBudWxsLAogICAgICAiaXNDb25zZW50SW1wbGllZCIgOiB0cnVlLAogICAgICAiY29udGFjdHMiIDogWyBdLAogICAgICAic29mdHdhcmVJZGVudGl0eSIgOiBudWxsLAogICAgICAicG9saWN5VXJpIiA6IFsgXSwKICAgICAgInJlc3BvbnNlVHlwZXMiIDogWyAiY29kZSIsICJ0b2tlbiIsICJpZF90b2tlbiIsICJjb2RlIHRva2VuIiwgInRva2VuIGlkX3Rva2VuIiwgImNvZGUgaWRfdG9rZW4iLCAiY29kZSB0b2tlbiBpZF90b2tlbiIsICJkZXZpY2VfY29kZSIsICJkZXZpY2VfY29kZSBpZF90b2tlbiIgXSwKICAgICAgImRlc2NyaXB0aW9ucyIgOiBbIF0sCiAgICAgICJzdWJqZWN0VHlwZSIgOiAiUHVibGljIiwKICAgICAgIm5hbWUiIDogWyBdLAogICAgICAiY3VzdG9tUHJvcGVydGllcyIgOiBbIF0sCiAgICAgICJqYXZhc2NyaXB0T3JpZ2lucyIgOiBbIF0KICAgIH0sCiAgICAiY29yZU9wZW5JRENsaWVudENvbmZpZyIgOiB7CiAgICAgICJqd3RUb2tlbkxpZmV0aW1lIiA6IDAsCiAgICAgICJjbGllbnRTZXNzaW9uVXJpIiA6IG51bGwsCiAgICAgICJiYWNrY2hhbm5lbF9sb2dvdXRfdXJpIiA6IG51bGwsCiAgICAgICJiYWNrY2hhbm5lbF9sb2dvdXRfc2Vzc2lvbl9yZXF1aXJlZCIgOiBmYWxzZSwKICAgICAgInBvc3RMb2dvdXRSZWRpcmVjdFVyaSIgOiBbIF0sCiAgICAgICJkZWZhdWx0TWF4QWdlIiA6IDYwMCwKICAgICAgImNsYWltcyIgOiBbIF0sCiAgICAgICJkZWZhdWx0QWNyVmFsdWVzIiA6IFsgXSwKICAgICAgImRlZmF1bHRNYXhBZ2VFbmFibGVkIiA6IGZhbHNlCiAgICB9LAogICAgImNvcmVPQXV0aDJDbGllbnRDb25maWciIDogewogICAgICAibG9vcGJhY2tJbnRlcmZhY2VSZWRpcmVjdGlvbiIgOiBmYWxzZSwKICAgICAgInVzZXJwYXNzd29yZCIgOiAiJntpZG0ucnMuY2xpZW50LnNlY3JldHxwYXNzd29yZH0iLAogICAgICAiYXV0aG9yaXphdGlvbkNvZGVMaWZldGltZSIgOiAwLAogICAgICAiYWNjZXNzVG9rZW5MaWZldGltZSIgOiAwLAogICAgICAiZGVmYXVsdFNjb3BlcyIgOiBbIF0sCiAgICAgICJjbGllbnROYW1lIiA6IFsgXSwKICAgICAgImNsaWVudFR5cGUiIDogIkNvbmZpZGVudGlhbCIsCiAgICAgICJzY29wZXMiIDogWyAiYW0taW50cm9zcGVjdC1hbGwtdG9rZW5zIiwgImFtLWludHJvc3BlY3QtYWxsLXRva2Vucy1hbnktcmVhbG0iIF0sCiAgICAgICJhZ2VudGdyb3VwIiA6IG51bGwsCiAgICAgICJyZWZyZXNoVG9rZW5MaWZldGltZSIgOiAwLAogICAgICAicmVkaXJlY3Rpb25VcmlzIiA6IFsgXSwKICAgICAgInN0YXR1cyIgOiAiQWN0aXZlIgogICAgfSwKICAgICJjb3JlVW1hQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImNsYWltc1JlZGlyZWN0aW9uVXJpcyIgOiBbIF0KICAgIH0sCiAgICAiX3R5cGUiIDogewogICAgICAiX2lkIiA6ICJPQXV0aDJDbGllbnQiLAogICAgICAibmFtZSIgOiAiT0F1dGgyIENsaWVudHMiLAogICAgICAiY29sbGVjdGlvbiIgOiB0cnVlCiAgICB9CiAgfQp9
  d32432dccba0babd7612ae7c8cbd6742ab65361c6eb6b9bffa587c16a0e1464c: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIk9BdXRoMkNsaWVudHMiLAogICAgImVudGl0eUlkIiA6ICJvYXV0aDIiLAogICAgInBhdGhQYXJhbXMiIDogeyB9CiAgfSwKICAiZGF0YSIgOiB7CiAgICAiX2lkIiA6ICJvYXV0aDIiLAogICAgInNpZ25FbmNPQXV0aDJDbGllbnRDb25maWciIDogewogICAgICAiaWRUb2tlbkVuY3J5cHRpb25NZXRob2QiIDogIkExMjhDQkMtSFMyNTYiLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uU2lnbmVkUmVzcG9uc2VBbGciIDogIlJTMjU2IiwKICAgICAgImp3a1NldCIgOiBudWxsLAogICAgICAiaWRUb2tlbkVuY3J5cHRpb25BbGdvcml0aG0iIDogIlJTQS1PQUVQLTI1NiIsCiAgICAgICJ1c2VyaW5mb1Jlc3BvbnNlRm9ybWF0IiA6ICJKU09OIiwKICAgICAgIm1UTFNUcnVzdGVkQ2VydCIgOiBudWxsLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uUmVzcG9uc2VGb3JtYXQiIDogIkpTT04iLAogICAgICAiandrc0NhY2hlVGltZW91dCIgOiAzNjAwMDAwLAogICAgICAidXNlcmluZm9TaWduZWRSZXNwb25zZUFsZyIgOiBudWxsLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uRW5jcnlwdGVkUmVzcG9uc2VBbGciIDogIlJTQS1PQUVQLTI1NiIsCiAgICAgICJ0b2tlbkVuZHBvaW50QXV0aFNpZ25pbmdBbGdvcml0aG0iIDogIlJTMjU2IiwKICAgICAgInJlcXVlc3RQYXJhbWV0ZXJFbmNyeXB0ZWRBbGciIDogbnVsbCwKICAgICAgIm1UTFNTdWJqZWN0RE4iIDogbnVsbCwKICAgICAgImlkVG9rZW5FbmNyeXB0aW9uRW5hYmxlZCIgOiBmYWxzZSwKICAgICAgInVzZXJpbmZvRW5jcnlwdGVkUmVzcG9uc2VFbmNyeXB0aW9uQWxnb3JpdGhtIiA6ICJBMTI4Q0JDLUhTMjU2IiwKICAgICAgInB1YmxpY0tleUxvY2F0aW9uIiA6ICJqd2tzX3VyaSIsCiAgICAgICJtVExTQ2VydGlmaWNhdGVCb3VuZEFjY2Vzc1Rva2VucyIgOiBmYWxzZSwKICAgICAgInRva2VuSW50cm9zcGVjdGlvbkVuY3J5cHRlZFJlc3BvbnNlRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJyZXF1ZXN0UGFyYW1ldGVyRW5jcnlwdGVkRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJqd2tTdG9yZUNhY2hlTWlzc0NhY2hlVGltZSIgOiA2MDAwMCwKICAgICAgImlkVG9rZW5TaWduZWRSZXNwb25zZUFsZyIgOiAiUlMyNTYiLAogICAgICAiaWRUb2tlblB1YmxpY0VuY3J5cHRpb25LZXkiIDogbnVsbCwKICAgICAgImp3a3NVcmkiIDogbnVsbCwKICAgICAgInVzZXJpbmZvRW5jcnlwdGVkUmVzcG9uc2VBbGciIDogbnVsbCwKICAgICAgInJlcXVlc3RQYXJhbWV0ZXJTaWduZWRBbGciIDogbnVsbCwKICAgICAgImNsaWVudEp3dFB1YmxpY0tleSIgOiBudWxsCiAgICB9LAogICAgImFkdmFuY2VkT0F1dGgyQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImdyYW50VHlwZXMiIDogWyAiYXV0aG9yaXphdGlvbl9jb2RlIiwgInBhc3N3b3JkIiwgImltcGxpY2l0IiwgInJlZnJlc2hfdG9rZW4iLCAiY2xpZW50X2NyZWRlbnRpYWxzIiBdLAogICAgICAidXBkYXRlQWNjZXNzVG9rZW4iIDogbnVsbCwKICAgICAgInRva2VuRXhjaGFuZ2VBdXRoTGV2ZWwiIDogMCwKICAgICAgInJlcXVlc3RVcmlzIiA6IFsgXSwKICAgICAgImNsaWVudFVyaSIgOiBbIF0sCiAgICAgICJzb2Z0d2FyZVZlcnNpb24iIDogbnVsbCwKICAgICAgIm1peFVwTWl0aWdhdGlvbiIgOiBmYWxzZSwKICAgICAgImxvZ29VcmkiIDogWyBdLAogICAgICAidG9rZW5FbmRwb2ludEF1dGhNZXRob2QiIDogImNsaWVudF9zZWNyZXRfYmFzaWMiLAogICAgICAidG9zVVJJIiA6IFsgXSwKICAgICAgInNlY3RvcklkZW50aWZpZXJVcmkiIDogbnVsbCwKICAgICAgImlzQ29uc2VudEltcGxpZWQiIDogZmFsc2UsCiAgICAgICJjb250YWN0cyIgOiBbIF0sCiAgICAgICJzb2Z0d2FyZUlkZW50aXR5IiA6IG51bGwsCiAgICAgICJwb2xpY3lVcmkiIDogWyBdLAogICAgICAicmVzcG9uc2VUeXBlcyIgOiBbICJjb2RlIiwgInRva2VuIiwgImlkX3Rva2VuIiwgImNvZGUgdG9rZW4iLCAidG9rZW4gaWRfdG9rZW4iLCAiY29kZSBpZF90b2tlbiIsICJjb2RlIHRva2VuIGlkX3Rva2VuIiwgImRldmljZV9jb2RlIiwgImRldmljZV9jb2RlIGlkX3Rva2VuIiBdLAogICAgICAiZGVzY3JpcHRpb25zIiA6IFsgIlNhbXBsZSBjbGllbnQgVXNlZCBmb3IgUElUIHRlc3RpbmciIF0sCiAgICAgICJzdWJqZWN0VHlwZSIgOiAicHVibGljIiwKICAgICAgIm5hbWUiIDogWyBdLAogICAgICAiY3VzdG9tUHJvcGVydGllcyIgOiBbIF0sCiAgICAgICJqYXZhc2NyaXB0T3JpZ2lucyIgOiBbIF0KICAgIH0sCiAgICAiY29yZU9wZW5JRENsaWVudENvbmZpZyIgOiB7CiAgICAgICJqd3RUb2tlbkxpZmV0aW1lIiA6IDAsCiAgICAgICJjbGllbnRTZXNzaW9uVXJpIiA6IG51bGwsCiAgICAgICJiYWNrY2hhbm5lbF9sb2dvdXRfdXJpIiA6IG51bGwsCiAgICAgICJiYWNrY2hhbm5lbF9sb2dvdXRfc2Vzc2lvbl9yZXF1aXJlZCIgOiBmYWxzZSwKICAgICAgInBvc3RMb2dvdXRSZWRpcmVjdFVyaSIgOiBbIF0sCiAgICAgICJkZWZhdWx0TWF4QWdlIiA6IDYwMCwKICAgICAgImNsYWltcyIgOiBbIF0sCiAgICAgICJkZWZhdWx0QWNyVmFsdWVzIiA6IFsgXSwKICAgICAgImRlZmF1bHRNYXhBZ2VFbmFibGVkIiA6IGZhbHNlCiAgICB9LAogICAgImNvcmVPQXV0aDJDbGllbnRDb25maWciIDogewogICAgICAibG9vcGJhY2tJbnRlcmZhY2VSZWRpcmVjdGlvbiIgOiBmYWxzZSwKICAgICAgInVzZXJwYXNzd29yZCIgOiAiJntwaXQuY2xpZW50LnNlY3JldHxwYXNzd29yZH0iLAogICAgICAiYXV0aG9yaXphdGlvbkNvZGVMaWZldGltZSIgOiAxMjAsCiAgICAgICJhY2Nlc3NUb2tlbkxpZmV0aW1lIiA6IDM2MDAsCiAgICAgICJkZWZhdWx0U2NvcGVzIiA6IFsgImNuIiwgInByb2ZpbGUiIF0sCiAgICAgICJjbGllbnROYW1lIiA6IFsgXSwKICAgICAgImNsaWVudFR5cGUiIDogIkNvbmZpZGVudGlhbCIsCiAgICAgICJzY29wZXMiIDogWyAicHJvZmlsZSIsICJtYWlsIiwgImVtcGxveWVlbnVtYmVyIiwgIm5hbWUiLCAiY24iLCAiZnI6aWRtOioiIF0sCiAgICAgICJhZ2VudGdyb3VwIiA6IG51bGwsCiAgICAgICJyZWZyZXNoVG9rZW5MaWZldGltZSIgOiA2MDQ4MDAsCiAgICAgICJyZWRpcmVjdGlvblVyaXMiIDogWyAiaHR0cDovL2Zha2UuY29tIiwgImh0dHBzOi8vZmFrZS5jb20iIF0sCiAgICAgICJzdGF0dXMiIDogIkFjdGl2ZSIKICAgIH0sCiAgICAiY29yZVVtYUNsaWVudENvbmZpZyIgOiB7CiAgICAgICJjbGFpbXNSZWRpcmVjdGlvblVyaXMiIDogWyBdCiAgICB9LAogICAgIl90eXBlIiA6IHsKICAgICAgIl9pZCIgOiAiT0F1dGgyQ2xpZW50IiwKICAgICAgIm5hbWUiIDogIk9BdXRoMiBDbGllbnRzIiwKICAgICAgImNvbGxlY3Rpb24iIDogdHJ1ZQogICAgfQogIH0KfQ==
  421568e5dd7cc68daf6ac8d4fb96bc4a38097c70afbfe518704fff44a7d058b4: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIk9BdXRoMkNsaWVudHMiLAogICAgImVudGl0eUlkIiA6ICJyZXNvdXJjZS1zZXJ2ZXIiLAogICAgInBhdGhQYXJhbXMiIDogeyB9CiAgfSwKICAiZGF0YSIgOiB7CiAgICAiX2lkIiA6ICJyZXNvdXJjZS1zZXJ2ZXIiLAogICAgImFkdmFuY2VkT0F1dGgyQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImNvbnRhY3RzIiA6IFsgXSwKICAgICAgImNsaWVudFVyaSIgOiBbIF0sCiAgICAgICJyZXNwb25zZVR5cGVzIiA6IFsgImNvZGUiLCAidG9rZW4iLCAiaWRfdG9rZW4iLCAiY29kZSB0b2tlbiIsICJ0b2tlbiBpZF90b2tlbiIsICJjb2RlIGlkX3Rva2VuIiwgImNvZGUgdG9rZW4gaWRfdG9rZW4iLCAiZGV2aWNlX2NvZGUiLCAiZGV2aWNlX2NvZGUgaWRfdG9rZW4iIF0sCiAgICAgICJzdWJqZWN0VHlwZSIgOiAiUHVibGljIiwKICAgICAgInNlY3RvcklkZW50aWZpZXJVcmkiIDogbnVsbCwKICAgICAgInRva2VuRW5kcG9pbnRBdXRoTWV0aG9kIiA6ICJjbGllbnRfc2VjcmV0X2Jhc2ljIiwKICAgICAgImlzQ29uc2VudEltcGxpZWQiIDogZmFsc2UsCiAgICAgICJ0b2tlbkV4Y2hhbmdlQXV0aExldmVsIiA6IDAsCiAgICAgICJ1cGRhdGVBY2Nlc3NUb2tlbiIgOiBudWxsLAogICAgICAidG9zVVJJIiA6IFsgXSwKICAgICAgImN1c3RvbVByb3BlcnRpZXMiIDogWyBdLAogICAgICAicmVxdWVzdFVyaXMiIDogWyBdLAogICAgICAibG9nb1VyaSIgOiBbIF0sCiAgICAgICJuYW1lIiA6IFsgXSwKICAgICAgInNvZnR3YXJlVmVyc2lvbiIgOiBudWxsLAogICAgICAic29mdHdhcmVJZGVudGl0eSIgOiBudWxsLAogICAgICAicG9saWN5VXJpIiA6IFsgXSwKICAgICAgImRlc2NyaXB0aW9ucyIgOiBbICJTYW1wbGUgY2xpZW50IFVzZWQgZm9yIElHIHRlc3RpbmciIF0sCiAgICAgICJtaXhVcE1pdGlnYXRpb24iIDogZmFsc2UsCiAgICAgICJncmFudFR5cGVzIiA6IFsgImF1dGhvcml6YXRpb25fY29kZSIgXSwKICAgICAgImphdmFzY3JpcHRPcmlnaW5zIiA6IFsgXQogICAgfSwKICAgICJjb3JlT3BlbklEQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImRlZmF1bHRNYXhBZ2VFbmFibGVkIiA6IGZhbHNlLAogICAgICAiY2xhaW1zIiA6IFsgXSwKICAgICAgImNsaWVudFNlc3Npb25VcmkiIDogbnVsbCwKICAgICAgImRlZmF1bHRNYXhBZ2UiIDogNjAwLAogICAgICAicG9zdExvZ291dFJlZGlyZWN0VXJpIiA6IFsgXSwKICAgICAgImJhY2tjaGFubmVsX2xvZ291dF91cmkiIDogbnVsbCwKICAgICAgImp3dFRva2VuTGlmZXRpbWUiIDogMCwKICAgICAgImJhY2tjaGFubmVsX2xvZ291dF9zZXNzaW9uX3JlcXVpcmVkIiA6IGZhbHNlLAogICAgICAiZGVmYXVsdEFjclZhbHVlcyIgOiBbIF0KICAgIH0sCiAgICAic2lnbkVuY09BdXRoMkNsaWVudENvbmZpZyIgOiB7CiAgICAgICJ1c2VyaW5mb0VuY3J5cHRlZFJlc3BvbnNlRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJyZXF1ZXN0UGFyYW1ldGVyRW5jcnlwdGVkRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJ1c2VyaW5mb1NpZ25lZFJlc3BvbnNlQWxnIiA6IG51bGwsCiAgICAgICJjbGllbnRKd3RQdWJsaWNLZXkiIDogbnVsbCwKICAgICAgImlkVG9rZW5FbmNyeXB0aW9uQWxnb3JpdGhtIiA6ICJSU0EtT0FFUC0yNTYiLAogICAgICAiandrc1VyaSIgOiBudWxsLAogICAgICAicmVxdWVzdFBhcmFtZXRlckVuY3J5cHRlZEFsZyIgOiBudWxsLAogICAgICAiaWRUb2tlblNpZ25lZFJlc3BvbnNlQWxnIiA6ICJSUzI1NiIsCiAgICAgICJqd2tzQ2FjaGVUaW1lb3V0IiA6IDM2MDAwMDAsCiAgICAgICJpZFRva2VuRW5jcnlwdGlvbkVuYWJsZWQiIDogZmFsc2UsCiAgICAgICJtVExTVHJ1c3RlZENlcnQiIDogbnVsbCwKICAgICAgInRva2VuSW50cm9zcGVjdGlvblJlc3BvbnNlRm9ybWF0IiA6ICJKU09OIiwKICAgICAgImlkVG9rZW5QdWJsaWNFbmNyeXB0aW9uS2V5IiA6IG51bGwsCiAgICAgICJ0b2tlbkVuZHBvaW50QXV0aFNpZ25pbmdBbGdvcml0aG0iIDogIlJTMjU2IiwKICAgICAgIm1UTFNDZXJ0aWZpY2F0ZUJvdW5kQWNjZXNzVG9rZW5zIiA6IGZhbHNlLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uRW5jcnlwdGVkUmVzcG9uc2VBbGciIDogIlJTQS1PQUVQLTI1NiIsCiAgICAgICJqd2tTZXQiIDogbnVsbCwKICAgICAgImp3a1N0b3JlQ2FjaGVNaXNzQ2FjaGVUaW1lIiA6IDYwMDAwLAogICAgICAidG9rZW5JbnRyb3NwZWN0aW9uRW5jcnlwdGVkUmVzcG9uc2VFbmNyeXB0aW9uQWxnb3JpdGhtIiA6ICJBMTI4Q0JDLUhTMjU2IiwKICAgICAgInRva2VuSW50cm9zcGVjdGlvblNpZ25lZFJlc3BvbnNlQWxnIiA6ICJSUzI1NiIsCiAgICAgICJ1c2VyaW5mb0VuY3J5cHRlZFJlc3BvbnNlQWxnIiA6IG51bGwsCiAgICAgICJtVExTU3ViamVjdEROIiA6IG51bGwsCiAgICAgICJwdWJsaWNLZXlMb2NhdGlvbiIgOiAiandrc191cmkiLAogICAgICAidXNlcmluZm9SZXNwb25zZUZvcm1hdCIgOiAiSlNPTiIsCiAgICAgICJpZFRva2VuRW5jcnlwdGlvbk1ldGhvZCIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJyZXF1ZXN0UGFyYW1ldGVyU2lnbmVkQWxnIiA6IG51bGwKICAgIH0sCiAgICAiY29yZU9BdXRoMkNsaWVudENvbmZpZyIgOiB7CiAgICAgICJzdGF0dXMiIDogIkFjdGl2ZSIsCiAgICAgICJsb29wYmFja0ludGVyZmFjZVJlZGlyZWN0aW9uIiA6IGZhbHNlLAogICAgICAidXNlcnBhc3N3b3JkIiA6ICIme2lnLnJzLmNsaWVudC5zZWNyZXR8cGFzc3dvcmR9IiwKICAgICAgImF1dGhvcml6YXRpb25Db2RlTGlmZXRpbWUiIDogMCwKICAgICAgImFjY2Vzc1Rva2VuTGlmZXRpbWUiIDogMCwKICAgICAgImNsaWVudFR5cGUiIDogIkNvbmZpZGVudGlhbCIsCiAgICAgICJyZWZyZXNoVG9rZW5MaWZldGltZSIgOiAwLAogICAgICAiY2xpZW50TmFtZSIgOiBbIF0sCiAgICAgICJkZWZhdWx0U2NvcGVzIiA6IFsgImFtLWludHJvc3BlY3QtYWxsLXRva2VucyIgXSwKICAgICAgInJlZGlyZWN0aW9uVXJpcyIgOiBbICJodHRwOi8vZmFrZS5jb20iIF0sCiAgICAgICJhZ2VudGdyb3VwIiA6IG51bGwsCiAgICAgICJzY29wZXMiIDogWyBdCiAgICB9LAogICAgImNvcmVVbWFDbGllbnRDb25maWciIDogewogICAgICAiY2xhaW1zUmVkaXJlY3Rpb25VcmlzIiA6IFsgXQogICAgfSwKICAgICJfdHlwZSIgOiB7CiAgICAgICJfaWQiIDogIk9BdXRoMkNsaWVudCIsCiAgICAgICJuYW1lIiA6ICJPQXV0aDIgQ2xpZW50cyIsCiAgICAgICJjb2xsZWN0aW9uIiA6IHRydWUKICAgIH0KICB9Cn0=
  7f5f4261c715ba7f2a4094a9c1ddf298ada0416ac6e9fb7d445853a3827ac235: ewogICJtZXRhZGF0YSIgOiB7CiAgICAicmVhbG0iIDogIi8iLAogICAgImFtc3RlclZlcnNpb24iIDogIiZ7dmVyc2lvbn0iLAogICAgImVudGl0eVR5cGUiIDogIk9BdXRoMkNsaWVudHMiLAogICAgImVudGl0eUlkIiA6ICJzbW9rZWNsaWVudCIsCiAgICAicGF0aFBhcmFtcyIgOiB7IH0KICB9LAogICJkYXRhIiA6IHsKICAgICJfaWQiIDogInNtb2tlY2xpZW50IiwKICAgICJzaWduRW5jT0F1dGgyQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImlkVG9rZW5FbmNyeXB0aW9uTWV0aG9kIiA6ICJBMTI4Q0JDLUhTMjU2IiwKICAgICAgInRva2VuSW50cm9zcGVjdGlvblNpZ25lZFJlc3BvbnNlQWxnIiA6ICJSUzI1NiIsCiAgICAgICJqd2tTZXQiIDogbnVsbCwKICAgICAgImlkVG9rZW5FbmNyeXB0aW9uQWxnb3JpdGhtIiA6ICJSU0EtT0FFUC0yNTYiLAogICAgICAidXNlcmluZm9SZXNwb25zZUZvcm1hdCIgOiAiSlNPTiIsCiAgICAgICJ0b2tlbkludHJvc3BlY3Rpb25SZXNwb25zZUZvcm1hdCIgOiAiSlNPTiIsCiAgICAgICJtVExTVHJ1c3RlZENlcnQiIDogbnVsbCwKICAgICAgImp3a3NDYWNoZVRpbWVvdXQiIDogMzYwMDAwMCwKICAgICAgInVzZXJpbmZvU2lnbmVkUmVzcG9uc2VBbGciIDogbnVsbCwKICAgICAgInRva2VuSW50cm9zcGVjdGlvbkVuY3J5cHRlZFJlc3BvbnNlQWxnIiA6ICJSU0EtT0FFUC0yNTYiLAogICAgICAicmVxdWVzdFBhcmFtZXRlckVuY3J5cHRlZEFsZyIgOiBudWxsLAogICAgICAidG9rZW5FbmRwb2ludEF1dGhTaWduaW5nQWxnb3JpdGhtIiA6ICJSUzI1NiIsCiAgICAgICJtVExTU3ViamVjdEROIiA6IG51bGwsCiAgICAgICJpZFRva2VuRW5jcnlwdGlvbkVuYWJsZWQiIDogZmFsc2UsCiAgICAgICJ1c2VyaW5mb0VuY3J5cHRlZFJlc3BvbnNlRW5jcnlwdGlvbkFsZ29yaXRobSIgOiAiQTEyOENCQy1IUzI1NiIsCiAgICAgICJwdWJsaWNLZXlMb2NhdGlvbiIgOiAiandrc191cmkiLAogICAgICAibVRMU0NlcnRpZmljYXRlQm91bmRBY2Nlc3NUb2tlbnMiIDogZmFsc2UsCiAgICAgICJ0b2tlbkludHJvc3BlY3Rpb25FbmNyeXB0ZWRSZXNwb25zZUVuY3J5cHRpb25BbGdvcml0aG0iIDogIkExMjhDQkMtSFMyNTYiLAogICAgICAicmVxdWVzdFBhcmFtZXRlckVuY3J5cHRlZEVuY3J5cHRpb25BbGdvcml0aG0iIDogIkExMjhDQkMtSFMyNTYiLAogICAgICAiandrU3RvcmVDYWNoZU1pc3NDYWNoZVRpbWUiIDogNjAwMDAsCiAgICAgICJpZFRva2VuU2lnbmVkUmVzcG9uc2VBbGciIDogIlJTMjU2IiwKICAgICAgImlkVG9rZW5QdWJsaWNFbmNyeXB0aW9uS2V5IiA6IG51bGwsCiAgICAgICJqd2tzVXJpIiA6IG51bGwsCiAgICAgICJ1c2VyaW5mb0VuY3J5cHRlZFJlc3BvbnNlQWxnIiA6IG51bGwsCiAgICAgICJyZXF1ZXN0UGFyYW1ldGVyU2lnbmVkQWxnIiA6IG51bGwsCiAgICAgICJjbGllbnRKd3RQdWJsaWNLZXkiIDogbnVsbAogICAgfSwKICAgICJhZHZhbmNlZE9BdXRoMkNsaWVudENvbmZpZyIgOiB7CiAgICAgICJncmFudFR5cGVzIiA6IFsgImF1dGhvcml6YXRpb25fY29kZSIsICJpbXBsaWNpdCIgXSwKICAgICAgInVwZGF0ZUFjY2Vzc1Rva2VuIiA6IG51bGwsCiAgICAgICJ0b2tlbkV4Y2hhbmdlQXV0aExldmVsIiA6IDAsCiAgICAgICJyZXF1ZXN0VXJpcyIgOiBbIF0sCiAgICAgICJjbGllbnRVcmkiIDogWyBdLAogICAgICAic29mdHdhcmVWZXJzaW9uIiA6IG51bGwsCiAgICAgICJtaXhVcE1pdGlnYXRpb24iIDogZmFsc2UsCiAgICAgICJsb2dvVXJpIiA6IFsgXSwKICAgICAgInRva2VuRW5kcG9pbnRBdXRoTWV0aG9kIiA6ICJjbGllbnRfc2VjcmV0X3Bvc3QiLAogICAgICAidG9zVVJJIiA6IFsgXSwKICAgICAgImlzQ29uc2VudEltcGxpZWQiIDogdHJ1ZSwKICAgICAgInNlY3RvcklkZW50aWZpZXJVcmkiIDogbnVsbCwKICAgICAgImNvbnRhY3RzIiA6IFsgXSwKICAgICAgInNvZnR3YXJlSWRlbnRpdHkiIDogbnVsbCwKICAgICAgInJlc3BvbnNlVHlwZXMiIDogWyAiY29kZSIsICJ0b2tlbiIsICJpZF90b2tlbiIsICJjb2RlIHRva2VuIiwgInRva2VuIGlkX3Rva2VuIiwgImNvZGUgaWRfdG9rZW4iLCAiY29kZSB0b2tlbiBpZF90b2tlbiIsICJkZXZpY2VfY29kZSIsICJkZXZpY2VfY29kZSBpZF90b2tlbiIgXSwKICAgICAgInBvbGljeVVyaSIgOiBbIF0sCiAgICAgICJkZXNjcmlwdGlvbnMiIDogWyBdLAogICAgICAic3ViamVjdFR5cGUiIDogIlB1YmxpYyIsCiAgICAgICJuYW1lIiA6IFsgXSwKICAgICAgImN1c3RvbVByb3BlcnRpZXMiIDogWyBdLAogICAgICAiamF2YXNjcmlwdE9yaWdpbnMiIDogWyBdCiAgICB9LAogICAgImNvcmVPcGVuSURDbGllbnRDb25maWciIDogewogICAgICAiand0VG9rZW5MaWZldGltZSIgOiAwLAogICAgICAiY2xpZW50U2Vzc2lvblVyaSIgOiBudWxsLAogICAgICAiYmFja2NoYW5uZWxfbG9nb3V0X3Nlc3Npb25fcmVxdWlyZWQiIDogZmFsc2UsCiAgICAgICJiYWNrY2hhbm5lbF9sb2dvdXRfdXJpIiA6IG51bGwsCiAgICAgICJwb3N0TG9nb3V0UmVkaXJlY3RVcmkiIDogWyBdLAogICAgICAiZGVmYXVsdE1heEFnZSIgOiA2MDAsCiAgICAgICJjbGFpbXMiIDogWyBdLAogICAgICAiZGVmYXVsdEFjclZhbHVlcyIgOiBbIF0sCiAgICAgICJkZWZhdWx0TWF4QWdlRW5hYmxlZCIgOiBmYWxzZQogICAgfSwKICAgICJjb3JlT0F1dGgyQ2xpZW50Q29uZmlnIiA6IHsKICAgICAgImxvb3BiYWNrSW50ZXJmYWNlUmVkaXJlY3Rpb24iIDogZmFsc2UsCiAgICAgICJhdXRob3JpemF0aW9uQ29kZUxpZmV0aW1lIiA6IDAsCiAgICAgICJhY2Nlc3NUb2tlbkxpZmV0aW1lIiA6IDAsCiAgICAgICJkZWZhdWx0U2NvcGVzIiA6IFsgImNuIiwgIm1haWwiIF0sCiAgICAgICJjbGllbnROYW1lIiA6IFsgXSwKICAgICAgImNsaWVudFR5cGUiIDogIlB1YmxpYyIsCiAgICAgICJzY29wZXMiIDogWyAib3BlbmlkIiwgImNuIiwgIm1haWwiLCAicHJvZmlsZSIsICJ1aWQiLCAiZnI6aWRtOioiLCAiZHluYW1pY19jbGllbnRfcmVnaXN0cmF0aW9uIiBdLAogICAgICAiYWdlbnRncm91cCIgOiBudWxsLAogICAgICAicmVmcmVzaFRva2VuTGlmZXRpbWUiIDogMCwKICAgICAgInJlZGlyZWN0aW9uVXJpcyIgOiBbICJodHRwczovL2Zha2UuY29tIiBdLAogICAgICAic3RhdHVzIiA6ICJBY3RpdmUiCiAgICB9LAogICAgImNvcmVVbWFDbGllbnRDb25maWciIDogewogICAgICAiY2xhaW1zUmVkaXJlY3Rpb25VcmlzIiA6IFsgXQogICAgfSwKICAgICJfdHlwZSIgOiB7CiAgICAgICJfaWQiIDogIk9BdXRoMkNsaWVudCIsCiAgICAgICJuYW1lIiA6ICJPQXV0aDIgQ2xpZW50cyIsCiAgICAgICJjb2xsZWN0aW9uIiA6IHRydWUKICAgIH0KICB9Cn0=
---
# Source: identity-platform/templates/amster-files-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: amster-scripts
  labels:
    helm.sh/chart: identity-platform-7.5
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: "7.5"
    app.kubernetes.io/managed-by: Helm
binaryData:
  79738685a656fe6b25061bb14181442210b599f746faeaba408a2401de45038a: IyEvdXNyL2Jpbi9lbnYgYmFzaAojCiMgQ29weXJpZ2h0IDIwMjQgUGluZyBJZGVudGl0eSBDb3Jwb3JhdGlvbi4gQWxsIFJpZ2h0cyBSZXNlcnZlZAojIFRoaXMgY29kZSBpcyB0byBiZSB1c2VkIGV4Y2x1c2l2ZWx5IGluIGNvbm5lY3Rpb24gd2l0aCBQaW5nIElkZW50aXR5IAojIENvcnBvcmF0aW9uIHNvZnR3YXJlIG9yIHNlcnZpY2VzLiBQaW5nIElkZW50aXR5IENvcnBvcmF0aW9uIG9ubHkgb2ZmZXJzCiMgc3VjaCBzb2Z0d2FyZSBvciBzZXJ2aWNlcyB0byBsZWdhbCBlbnRpdGllcyB3aG8gaGF2ZSBlbnRlcmVkIGludG8gYSAKIyBiaW5kaW5nIGxpY2Vuc2UgYWdyZWVtZW50IHdpdGggUGluZyBJZGVudGl0eSBDb3Jwb3JhdGlvbi4KIwpzZXQgLWUKCiMgSWYgYSBjb21tYW5kIGFyZyBpcyBub3QgcGFzc2VkLCBkZWZhdWx0IHRvIGltcG9ydApBQ1RJT049IiR7MTotaW1wb3J0fSIKCmVjaG8gImFtc3RlciBhY3Rpb24gaXMgJEFDVElPTiIKCiMgRGVmYXVsdCBpcyB0byBjb25uZWN0IHZpYSB0aGUgaW50ZXJuYWwgaHR0cCBzZXJ2aWNlIG5hbWUKIyBOb3RlIHdlIHVzZSBBTVNURVJfQU1fUlVMIHNvIHdlIGRvbnQgY29sbGlkZSB3aXRoIHRoZSBwbGF0Zm9ybSBBTV9VUkwgLSB3aGljaCBtaWdodCBiZSBleHRlcm5hbApleHBvcnQgQU1TVEVSX0FNX1VSTD0ke0FNU1RFUl9BTV9VUkw6LWh0dHA6Ly9hbTo4MC9hbX0KCnBhdXNlKCkgewogICAgZWNobyAiQXJncyBhcmUgJCMgIgoKICAgIGVjaG8gIkNvbnRhaW5lciB3aWxsIG5vdyBwYXVzZS4gWW91IGNhbiBleGVjIGludG8gdGhlIGNvbnRhaW5lciB1c2luZyBrdWJlY3RsIGV4ZWMgdG8gcnVuIGV4cG9ydC5zaCIKICAgICMgU2xlZXAgZm9yZXZlciwgd2FpdGluZyBmb3Igc29tZW9uZSB0byBleGVjIGludG8gdGhlIGNvbnRhaW5lci4KICAgIHdoaWxlIHRydWUKICAgIGRvCiAgICAgICAgc2xlZXAgMTAwMDAwMCAmIHdhaXQKICAgIGRvbmUKfQoKCiMgRXh0cmFjdCBhbXN0ZXIgdmVyc2lvbiBmb3IgY29tbW9ucyBwYXJhbWV0ZXIgdG8gbW9kaWZ5IGNvbmZpZ3MKZWNobyAiRXh0cmFjdGluZyBhbXN0ZXIgdmVyc2lvbiIKVkVSPSQoLi9hbXN0ZXIgLS12ZXJzaW9uKQplY2hvICJBbXN0ZXIgdmVyc2lvbiBvdXRwdXQgaXM6ICcke1ZFUn0nIgpbWyAiJFZFUiIgPX4gKFswLTldLlswLTldLlswLTldKFwuWzAtOV0qKT8tKFthLXpBLVowLTldK3woWy1hLXpBLVowLTldKyk/U05BUFNIT1R8UkNbMC05XSt8TVswLTldKyl8WzAtOV0uWzAtOV0uWzAtOV0oXC5bMC05XSopPykgXV0KVkVSU0lPTj0ke0JBU0hfUkVNQVRDSFsxXX0KZWNobyAiQW1zdGVyIHZlcnNpb24gaXM6ICcke1ZFUlNJT059JyIKZXhwb3J0IFZFUlNJT04KCmNhc2UgJEFDVElPTiAgaW4KcGF1c2UpCiAgICBwYXVzZQogICAgOzsKZXhwb3J0KQogICAgIyBpbnZva2UgYW1zdGVyIGV4cG9ydAogICAgLi9leHBvcnQuc2ggJHtUWVBFfQogICAgOzsKaW1wb3J0KQogICAgIyBpbnZva2UgYW1zdGVyIGluc3RhbGwuCiAgICAuL2ltcG9ydC5zaAogICAgOzsKdXBsb2FkKQogICAgIyBMaWtlIGltcG9ydCAtIGJ1dCB3YWl0cyBmb3IgZmlsZXMgdG8gYmUgdXBsb2FkZWQgdG8gY29uZmlnL3VwbG9hZAogICAgLi9pbXBvcnQuc2ggdXBsb2FkCiAgICA7OwoqKQogICBleGVjICIkQCIKZXNhYwo=
  a70ab199085ab146f5b9ca4fde5b679154668c0143b58478c13910d2154fd889: IyEvdXNyL2Jpbi9lbnYgYmFzaApFWFBPUlRfRElSPSIke0VYUE9SVF9ESVI6LS92YXIvdG1wL2Ftc3Rlcn0iCgojIExpc3Qgb2YgcmVhbG0gZW50aXRpZXMgdG8gZXhwb3J0LgppZiBbWyAiJDEiID09ICJmdWxsIiBdXTsgdGhlbgogICAgcmVhbG1FbnRpdGllcz0iIgplbHNlCiAgICByZWFsbUVudGl0aWVzPSItLXJlYWxtRW50aXRpZXMgJ09BdXRoMkNsaWVudHMgSWRlbnRpdHlHYXRld2F5QWdlbnRzIEoyZWVBZ2VudHMgV2ViQWdlbnRzIFNvYXBTdHNBZ2VudHMgUG9saWNpZXMgQ2lyY2xlT2ZUcnVzdCBTYW1sMkVudGl0eSBBcHBsaWNhdGlvbnMnIgpmaQoKIyBDcmVhdGUgYSB0ZW1wb3JhcnkgZXhwb3J0IGZvbGRlci4KbWtkaXIgLXAgJEVYUE9SVF9ESVIKCiMgQ3JlYXRlIEFtc3RlciBleHBvcnQgc2NyaXB0LgpjYXQgPiAvdG1wL2RvX2V4cG9ydC5hbXN0ZXIgPDxFT0YKY29ubmVjdCAtayAgL3Zhci9ydW4vc2VjcmV0cy9hbXN0ZXIvaWRfcnNhICRBTVNURVJfQU1fVVJMCmV4cG9ydC1jb25maWcgLS1wYXRoICckRVhQT1JUX0RJUicgJHtyZWFsbUVudGl0aWVzfQo6cXVpdApFT0YKCi9vcHQvYW1zdGVyL2Ftc3RlciAvdG1wL2RvX2V4cG9ydC5hbXN0ZXIKCmVjaG8gIkV4cG9ydGVkIGZpbGVzOiIKbHMgLVIgL3Zhci90bXAvYW1zdGVy
  63ccbd1ea3a3b7fab64c58c9f0dc82359a2c4704d376e029800d4d139fb4e07e: IyEvdXNyL2Jpbi9lbnYgYmFzaAojIEltcG9ydCBkeW5hbWljIGNvbmZpZy4KCiMgQWxpdmUgY2hlY2sKQUxJVkU9IiR7QU1TVEVSX0FNX1VSTH0vanNvbi9oZWFsdGgvcmVhZHkiCgp3YWl0X2Zvcl9vcGVuYW0oKQp7CiAgIGVjaG8gIldhaXRpbmcgZm9yIEFNIHNlcnZlciBhdCAke0FMSVZFfS4uLiIKICAgcmVzcG9uc2U9IjAwMCIKCgl3aGlsZSB0cnVlCglkbwoJICBlY2hvICJUcnlpbmcgJHtBTElWRX0iCgkJcmVzcG9uc2U9JChjdXJsIC0td3JpdGUtb3V0ICV7aHR0cF9jb2RlfSAtLXNpbGVudCAtLWNvbm5lY3QtdGltZW91dCAzMCAtLW91dHB1dCAvZGV2L251bGwgJHtBTElWRX0gKQoKICAgICAgZWNobyAiR290IFJlc3BvbnNlIGNvZGUgJHtyZXNwb25zZX0iCiAgICAgIGlmIFsgIiR7cmVzcG9uc2V9IiA9ICIyMDAiIF07CiAgICAgIHRoZW4KICAgICAgICAgZWNobyAiQU0gd2ViIGFwcCBpcyB1cCIKICAgICAgICAgYnJlYWsKICAgICAgZmkKCiAgICAgIGVjaG8gIldpbGwgY29udGludWUgdG8gd2FpdC4uLiIKICAgICAgc2xlZXAgNQogICBkb25lCn0KCgojIEZ1bmN0aW9uIHRoYXQgd2FpdHMgZm9yIGZpbGVzIHRvIGJlIHVwbG9hZGVkIHRvIC9vcHQvYW1zdGVyL2NvbmZpZy91cGxvYWQKIyBUaGlzIHdvdWxkIHVzdWFsbHkgYmUgZG9uZSB2aWEga3ViZWN0bCBjcAp3YWl0X2NvbmZpZ19maWxlX3VwbG9hZCgpCnsKICAgVElNRU9VVD02MAogICBta2RpciAtcCAvb3B0L2Ftc3Rlci9jb25maWcvdXBsb2FkCiAgIGVjaG8gIldhaXRpbmcgZm9yIGZpbGVzIHRvIGJlIHVwbG9hZGVkIgogICBpbm90aWZ5d2FpdCAvb3B0L2Ftc3Rlci9jb25maWcvdXBsb2FkICAtZSBjcmVhdGUgLS10aW1lb3V0ICRUSU1FT1VUIHx8IHsKICAgICAgZWNobyAiTm8gdXBsb2FkZWQgZmlsZXMgd2VyZSBmb3VuZCB3aXRoaW4gJFRJTUVPVVQgc2Vjb25kcy4gRXhpdGluZyIKICAgICAgZXhpdCAxCiAgIH0KICAgZWNobyAiRmlsZXMgdXBsb2FkZWQgLSBwcm9jZWVkaW5nIHdpdGggYW1zdGVyIGltcG9ydCIKfQoKCiMgSW1wb3J0IGNvbmZpZyAtIHNjcmlwdCBpcyBwYXNzZWQgaW4gJDEKaW1wb3J0KCkgewoKICAgZWNobyAiRXhlY3V0aW5nIHNjcmlwdCAkMSIKCiAgICMgRXhlY3V0ZSBBbXN0ZXIgaWYgdGhlIGNvbmZpZ3VyYXRpb24gaXMgZm91bmQuCiAgIGlmIFsgICR7MX0gXTsgdGhlbgogICAgICBpZiBbICEgLXIgL3Zhci9ydW4vc2VjcmV0cy9hbXN0ZXIvaWRfcnNhIF07IHRoZW4KICAgICAgICAgZWNobyAiRVJST1I6IENhbiBub3QgZmluZCB0aGUgQW1zdGVyIHByaXZhdGUga2V5IgogICAgICAgICBleGl0IDEKICAgICAgZmkKCiAgICAgIGVjaG8gIkV4ZWN1dGluZyBBbXN0ZXIgdG8gaW1wb3J0IGR5bmFtaWMgY29uZmlnIgogICAgICAjIE5lZWQgdG8gYmUgaW4gdGhlIGFtc3RlciBkaXJlY3RvcnksIG90aGVyd2lzZSBBbXN0ZXIgY2FuJ3QgZmluZCBpdHMgbGlicmFyaWVzLgoKICAgICAgIyBVc2UgdGhlIGludGVybmFsIGhvc3RuYW1lIGZvciBBTS4gVGhlIGV4dGVybmFsIG5hbWUgbWlnaHQgbm90IGhhdmUgYSBwcm9wZXIgU1NMIGNlcnRpZmljYXRlCiAgICAgICRKQVZBX0hPTUUvYmluL2phdmEgLWphciAuL2Ftc3Rlci0qLmphciAgIiR7MX0iIC1xIC1EIEFNX0hPU1Q9IiR7SU5TVEFOQ0V9IiAgPiAvdG1wL291dC5sb2cgMj4mMQoKICAgICAgZWNobyAiQW1zdGVyIG91dHB1dCAqKioqKioqKioiCiAgICAgIGNhdCAvdG1wL291dC5sb2cKCiAgICAgICMgVGhpcyBpcyBhIHdvcmthcm91bmQgdG8gdGVzdCBpZiB0aGUgaW1wb3J0IGZhaWxlZCwgYW5kIHJldHVybiBhIG5vbiB6ZXJvIGV4aXQgY29kZSBpZiBpdCBkaWQKICAgICAgIyBTZWUgaHR0cHM6Ly9idWdzdGVyLmZvcmdlcm9jay5vcmcvamlyYS9icm93c2UvT1BFTkFNLTExNDMxCiAgICAgIGlmIGdyZXAgLXEgJ0VSUk9SXHxDb25maWd1cmF0aW9uXCBmYWlsZWRcfENvdWxkXCBub3RcIGNvbm5lY3RcfE5vXCBjb25uZWN0aW9uXHxVbmV4cGVjdGVkXCByZXNwb25zZScgPC90bXAvb3V0LmxvZzsgdGhlbgogICAgICAgICAgICBlY2hvICJBbXN0ZXIgaW1wb3J0IGVycm9ycyIKICAgICAgICAgICAgZXhpdCAxCiAgICAgIGZpCiAgIGZpCgogICBlY2hvICAiaW1wb3J0IGRvbmUiCn0KCmNhdCA+L3RtcC9pbXBvcnQuYW1zdGVyIDw8RU9GCmNvbm5lY3QgJEFNU1RFUl9BTV9VUkwgLWsgL3Zhci9ydW4vc2VjcmV0cy9hbXN0ZXIvaWRfcnNhCmltcG9ydC1jb25maWcgLS1wYXRoIC9vcHQvYW1zdGVyL2NvbmZpZyAgLS1jbGVhbiBmYWxzZQo6ZXhpdApFT0YKCndhaXRfZm9yX29wZW5hbQoKIyBJZiB0aGVyZSBpcyBubyBhcmcgLSBqdXN0IGltcG9ydCBhbnkgZmlsZXMgZm91bmQgaW4gY29uZmlnLwppZiBbWyAteiAiJDEiIF1dOyB0aGVuCiAgIGltcG9ydCAiL3RtcC9pbXBvcnQuYW1zdGVyIgplbHNlCiAgICMgRWxzZS0gd2FpdCBmb3IgdXBsb2FkCiAgIHdhaXRfY29uZmlnX2ZpbGVfdXBsb2FkCiAgIHNsZWVwIDUKICAgaW1wb3J0ICIvdG1wL2ltcG9ydC5hbXN0ZXIiCmZpCg==
---
# Source: identity-platform/templates/amster-retain-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: amster-retain
  labels:
    helm.sh/chart: identity-platform-7.5
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: "7.5"
    app.kubernetes.io/managed-by: Helm
data:
  DURATION: "10"
---
# Source: identity-platform/templates/amster-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: amster
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    helm.sh/chart: identity-platform-7.5
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: "7.5"
    app.kubernetes.io/managed-by: Helm
    app: amster
    app.kubernetes.io/component: amster
spec:
  backoffLimit: 6
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/name: identity-platform
        app.kubernetes.io/instance: identity-platform
        app: amster
        app.kubernetes.io/component: amster
    spec:
      restartPolicy: OnFailure
      serviceAccountName: default
      securityContext: {}
      volumes:
        - name: amster-config
          configMap:
            name: amster-config
        - name: amster-scripts
          configMap:
            name: amster-scripts
        - name: amster-secrets
          secret:
            secretName: amster
        - name: platform-config
          configMap:
            name: platform-config
        - name: export-files
          emptyDir: {}
      initContainers:
        - name: amster
          securityContext: {}
          image: "gcr.io/forgerock-io/amster/pit1:7.5.0"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
          args:
            - |
              for f in $(find /amster-scripts); do
                cp $f /opt/amster/ && chmod 775 /opt/amster/$(basename $f)
              done
              ./docker-entrypoint.sh import
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: platform-config
            - secretRef:
                name: amster-env-secrets
            - secretRef:
                name: ds-env-secrets
          resources: {}
          volumeMounts:
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/Applications/iPlanetAMWebAgentService.json
              subPath: fe63c80e189bcab18f001a857c9da6b5535684e60753f4e7c56392a631e15b98
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/Applications/oauth2Scopes.json
              subPath: 8ba770d2c9209e987e12d2a02ac51014a3da4cd05c9bd08d09c58b174c133ded
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/Applications/sunAMDelegationService.json
              subPath: e5e03f343398d8332c1f53b51ee06981a41de72cfb4820960793c0daef9f3c73
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/IdentityGatewayAgents/ig-agent.json
              subPath: b83e99de89a7582bfaadacd9daf94c92e9c2a4ed4d5b61bc6269d65bd4b6ba06
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/OAuth2Clients/client-application.json
              subPath: 26ca813f81ad68ee51af855f07fac803004b622f9b36dc86d22f91316b37cdb3
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/OAuth2Clients/clientOIDC_0.json
              subPath: d8d3b9733a30acda46342a9b3871cf199de2e61f6bdcb14ca61456eda1654e5e
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/OAuth2Clients/end-user-ui.json
              subPath: b992a5572abd75c14e11c7a4cc59c4c57927dfb18563746faf2fbf17cde41e01
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/OAuth2Clients/idm-admin-ui.json
              subPath: 90985fa04421866c455581fc1aaa7918f4c54703d0754dee57f99736d47972c2
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/OAuth2Clients/idm-provisioning.json
              subPath: 82dc89d29679e4d5f5265691d9f5b0efaa06e061dae43b25238a1af0077d5fe6
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/OAuth2Clients/idm-resource-server.json
              subPath: 44c1bed9b66036d441b622856c289d83714e7e7801c137a8f6f3aa0738f63b14
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/OAuth2Clients/oauth2.json
              subPath: d32432dccba0babd7612ae7c8cbd6742ab65361c6eb6b9bffa587c16a0e1464c
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/OAuth2Clients/resource-server.json
              subPath: 421568e5dd7cc68daf6ac8d4fb96bc4a38097c70afbfe518704fff44a7d058b4
            - name: amster-config
              mountPath: /opt/amster/config/config/realms/root/OAuth2Clients/smokeclient.json
              subPath: 7f5f4261c715ba7f2a4094a9c1ddf298ada0416ac6e9fb7d445853a3827ac235
            - name: amster-scripts
              mountPath: /amster-scripts/docker-entrypoint.sh
              subPath: 79738685a656fe6b25061bb14181442210b599f746faeaba408a2401de45038a
            - name: amster-scripts
              mountPath: /amster-scripts/export.sh
              subPath: a70ab199085ab146f5b9ca4fde5b679154668c0143b58478c13910d2154fd889
            - name: amster-scripts
              mountPath: /amster-scripts/import.sh
              subPath: 63ccbd1ea3a3b7fab64c58c9f0dc82359a2c4704d376e029800d4d139fb4e07e
            - name: amster-secrets
              mountPath: /var/run/secrets/amster
              readOnly: true
            - name: export-files
              mountPath: /var/tmp/amster
      containers:
        - name: pause
          securityContext: {}
          image: "gcr.io/forgerock-io/amster/pit1:7.5.0"
          imagePullPolicy: IfNotPresent
          args:
            - bash
            - -c
            - sleep ${DURATION:-10}
          envFrom:
            - configMapRef:
                name: amster-retain
                optional: true
          readinessProbe:
            exec:
              command:
                - cat
                - /etc/hosts
            initialDelaySeconds: 1
          resources: {}
          volumeMounts:
            - name: export-files
              mountPath: /var/tmp/amster
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Exists
