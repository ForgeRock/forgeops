---
# Source: identity-platform/templates/ds-cts-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ds-cts
  labels:
    helm.sh/chart: identity-platform-7.5
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: "7.5"
    app.kubernetes.io/managed-by: Helm
    app: ds-cts
    app.kubernetes.io/component: ds-cts
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 4444
      targetPort: tcp-admin
      protocol: TCP
      name: tcp-admin
    - port: 1389
      targetPort: tcp-ldap
      protocol: TCP
      name: tcp-ldap
    - port: 1636
      targetPort: tcp-ldaps
      protocol: TCP
      name: tcp-ldaps
    - port: 8989
      targetPort: tcp-replication
      protocol: TCP
      name: tcp-replication
    - port: 8443
      targetPort: https
      protocol: TCP
      name: https
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/instance: identity-platform
    app: ds-cts
    app.kubernetes.io/component: ds-cts
---
# Source: identity-platform/templates/ds-cts-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ds-cts
  labels:
    helm.sh/chart: identity-platform-7.5
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: "7.5"
    app.kubernetes.io/managed-by: Helm
    app: ds-cts
    app.kubernetes.io/component: ds-cts
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: identity-platform
      app.kubernetes.io/instance: identity-platform
      app: ds-cts
      app.kubernetes.io/component: ds-cts
  serviceName: ds-cts
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/name: identity-platform
        app.kubernetes.io/instance: identity-platform
        app: ds-cts
        app.kubernetes.io/component: ds-cts
    spec:
      serviceAccountName: default
      subdomain: ds-cts
      securityContext:
        fsGroup: 0
        runAsUser: 11111
      volumes:
        - name: ds-master-keypair
          secret:
            secretName: ds-master-keypair
        - name: ds-ssl-keypair
          secret:
            secretName: ds-ssl-keypair
        - name: truststore
          secret:
            secretName: ds-ssl-keypair
        - name: admin-password
          secret:
            secretName: ds-passwords
        - name: monitor-password
          secret:
            secretName: ds-passwords
        - name: keys
          emptyDir: {}
        - name: cloud-credentials-cache
          emptyDir: {}
      initContainers:
        - name: init
          securityContext: {}
          image: "us-docker.pkg.dev/forgeops-public/images/ds:7.5.0"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /opt/opendj/data
              name: data
            - mountPath: /var/run/secrets/admin
              name: admin-password
            - mountPath: /var/run/secrets/monitor
              name: monitor-password
            - mountPath: /var/run/secrets/ds-ssl-keypair
              name: ds-ssl-keypair
            - mountPath: /var/run/secrets/ds-master-keypair
              name: ds-master-keypair
            - mountPath: /var/run/secrets/truststore
              name: truststore
            - mountPath: /var/run/secrets/keys
              name: keys
            - mountPath: /var/run/secrets/cloud-credentials-cache/
              name: cloud-credentials-cache
          args:
            - init
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DS_SET_UID_ADMIN_AND_MONITOR_PASSWORDS
              value: "true"
            - name: DS_UID_MONITOR_PASSWORD_FILE
              value: /var/run/secrets/monitor/monitor.pw
            - name: DS_UID_ADMIN_PASSWORD_FILE
              value: /var/run/secrets/admin/dirmanager.pw
            - name: DSBACKUP_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: platform-config
                  key: DSBACKUP_HOSTS
            - name: DSBACKUP_DIRECTORY
              valueFrom:
                configMapKeyRef:
                  name: platform-config
                  key: DSBACKUP_DIRECTORY
            - name: AUTORESTORE_FROM_DSBACKUP
              valueFrom:
                configMapKeyRef:
                  name: platform-config
                  key: AUTORESTORE_FROM_DSBACKUP
            - name: DISASTER_RECOVERY_ID
              valueFrom:
                configMapKeyRef:
                  name: platform-config
                  key: DISASTER_RECOVERY_ID
          envFrom:
            - secretRef:
                name: cloud-storage-credentials
                optional: true
      containers:
        - name: ds
          securityContext: {}
          image: "us-docker.pkg.dev/forgeops-public/images/ds:7.5.0"
          imagePullPolicy: IfNotPresent
          args:
            - start-ds
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DS_SET_UID_ADMIN_AND_MONITOR_PASSWORDS
              value: "true"
            - name: DS_UID_MONITOR_PASSWORD_FILE
              value: /var/run/secrets/monitor/monitor.pw
            - name: DS_UID_ADMIN_PASSWORD_FILE
              value: /var/run/secrets/admin/dirmanager.pw
          envFrom:
            - secretRef:
                name: cloud-storage-credentials
                optional: true
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: tcp-ldap
              containerPort: 1389
              protocol: TCP
            - name: tcp-ldaps
              containerPort: 1636
              protocol: TCP
            - name: tcp-admin
              containerPort: 4444
              protocol: TCP
            - name: tcp-replication
              containerPort: 8989
              protocol: TCP
          startupProbe:
            httpGet:
              path: /healthy
              port: http
            failureThreshold: 720
            initialDelaySeconds: 30
          resources: {}
          volumeMounts:
            - mountPath: /opt/opendj/data
              name: data
            - mountPath: /var/run/secrets/admin
              name: admin-password
            - mountPath: /var/run/secrets/monitor
              name: monitor-password
            - mountPath: /var/run/secrets/ds-ssl-keypair
              name: ds-ssl-keypair
            - mountPath: /var/run/secrets/ds-master-keypair
              name: ds-master-keypair
            - mountPath: /var/run/secrets/truststore
              name: truststore
            - mountPath: /var/run/secrets/keys
              name: keys
            - mountPath: /var/run/secrets/cloud-credentials-cache/
              name: cloud-credentials-cache
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Exists
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
          pv.beta.kubernetes.io/gid: "0"
        labels:
          helm.sh/chart: identity-platform-7.5
          app.kubernetes.io/name: identity-platform
          app.kubernetes.io/instance: identity-platform
          app.kubernetes.io/version: "7.5"
          app.kubernetes.io/managed-by: Helm
          app: ds-cts
          app.kubernetes.io/component: ds-cts
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: fast
