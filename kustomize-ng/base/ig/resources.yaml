---
# Source: identity-platform/templates/ig-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ig
  labels:
    helm.sh/chart: identity-platform-7.5
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: "7.5"
    app.kubernetes.io/managed-by: Helm
    app: ig
    app.kubernetes.io/component: ig
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/instance: identity-platform
    app: ig
    app.kubernetes.io/component: ig
---
# Source: identity-platform/templates/ig-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ig
  labels:
    helm.sh/chart: identity-platform-7.5
    app.kubernetes.io/name: identity-platform
    app.kubernetes.io/instance: identity-platform
    app.kubernetes.io/version: "7.5"
    app.kubernetes.io/managed-by: Helm
    app: ig
    app.kubernetes.io/component: ig
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: identity-platform
      app.kubernetes.io/instance: identity-platform
      app: ig
      app.kubernetes.io/component: ig
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/name: identity-platform
        app.kubernetes.io/instance: identity-platform
        app: ig
        app.kubernetes.io/component: ig
    spec:
      serviceAccountName: default
      securityContext: {}
      containers:
        - name: ig
          securityContext: {}
          image: "idm:7.5"
          imagePullPolicy: IfNotPresent
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - secretRef:
                name: openig-secrets-env
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /kube/liveness
              port: http
            periodSeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /kube/readiness
              port: http
            initialDelaySeconds: 5
          resources: {}
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Exists
