{{- if eq (include "keystore_create.enabled" .) "true" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: keystore-create
  labels:
    {{- include "identity-platform.labels" . | nindent 4 }}
    {{- with .Values.keystore_create.podLabels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  backoffLimit: {{ .Values.keystore_create.backoffLimit }}
  {{- if .Values.keystore_create.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ .Values.keystore_create.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      annotations:
        {{- if .Values.platform.annotations.deploymentDate.enabled }}
        deployment-date: {{ now | quote }}
        {{- end }}
        {{- with .Values.keystore_create.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "identity-platform.selectorLabels" . | nindent 8 }}
        {{- with .Values.keystore_create.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: {{ .Values.keystore_create.restartPolicy }}
      {{- if .Values.keystore_create.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.keystore_create.image.imagePullSecrets | nindent 8 }}
      {{- else if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: keystore-create
      securityContext:
        {{- toYaml .Values.keystore_create.podSecurityContext | nindent 8 }}
      volumes:
        - name: keystore-secrets
          projected:
            sources:
            - secret:
                name: keystore-create
                items:
                - key: KEYSTORE_PASSWORD
                  path: .storepass
                - key: KEYSTORE_PASSWORD
                  path: .keypass
            - secret:
                name: ds-passwords
                items:
                - key: dirmanager.pw
                  path: dirmanager.pw
        - name: platform-config
          configMap:
            name: platform-config
        - name: keystore-create
          configMap:
            name: keystore-create
            defaultMode: 0755
        - name: keystore-config
          configMap:
            name: keystore
        - name: keystore
          emptyDir: {}
      initContainers:
        - name: keystore-create
          securityContext:
            {{- toYaml .Values.keystore_create.securityContext | nindent 12 }}
          image: "{{ .Values.keystore_create.initImage.repository }}:{{ .Values.keystore_create.initImage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.keystore_create.initImage.pullPolicy }}
          command: ["/home/forgerock/keystore-create.sh"]
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: platform-config
          resources:
            {{- toYaml .Values.keystore_create.resources | nindent 12 }}
          volumeMounts:
          - name: keystore-config
            mountPath: /home/forgerock/keystore.json
            subPath: keystore.json
          - name: keystore-secrets
            mountPath: /var/run/secrets/keystore
          - name: keystore-create
            mountPath: /home/forgerock/keystore-create.sh
            subPath: keystore-create.sh
          - name: keystore
            mountPath: /keystore
      containers:
        - name: keystore-secret-create
          securityContext:
            {{- toYaml .Values.keystore_create.securityContext | nindent 12 }}
          image: "{{ .Values.keystore_create.image.repository }}:{{ .Values.keystore_create.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.keystore_create.image.pullPolicy }}
          command:
            - sh
            - -c
            - |
              {{- if .Values.keystore_create.config.secret.replace }}
              kubectl delete secret $SECRET_NAME --namespace=$NAMESPACE
              {{- end }}
              kubectl get secret $SECRET_NAME \
                --namespace=$NAMESPACE 2>&1 >/dev/null || \
                  kubectl create secret generic $SECRET_NAME \
                    --from-file=/keystore/keystore.jceks --namespace=$NAMESPACE
          env:
          - name: SECRET_NAME
            value: {{ .Values.keystore_create.config.secret.name }}
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: platform-config
          readinessProbe:
            exec:
              command:
                - cat
                - /etc/hosts
            {{- with .Values.keystore_create.readinessProbe }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.keystore_create.resources | nindent 12 }}
          volumeMounts:
          - name: keystore
            mountPath: /keystore
      {{- with .Values.keystore_create.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.keystore_create.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
      {{- if .Values.keystore_create.tolerations }}
        {{- toYaml .Values.keystore_create.tolerations | nindent 8 }}
      {{- else if .Values.platform.tolerations }}
        {{- toYaml .Values.platform.tolerations | nindent 8 }}
      {{- end }}
{{- end }}
